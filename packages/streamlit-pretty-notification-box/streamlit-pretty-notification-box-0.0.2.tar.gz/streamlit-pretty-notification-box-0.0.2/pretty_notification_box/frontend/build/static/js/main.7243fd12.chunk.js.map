{"version":3,"sources":["NicerNotification.tsx","index.tsx"],"names":["NicerNotification","render","icon","props","args","title","textDisplay","externalLink","url","styles","className","style","href","target","onClick","document","querySelector","display","onClicked","Streamlit","setComponentValue","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","getElementById"],"mappings":"gUAYMA,E,4MAEGC,OAAS,WAGd,IAAMC,EAAc,EAAKC,MAAMC,KAAX,KACdC,EAAe,EAAKF,MAAMC,KAAX,MACfE,EAAkB,EAAKH,MAAMC,KAAX,YAClBG,EAAsB,EAAKJ,MAAMC,KAAX,aACtBI,EAAU,EAAKL,MAAMC,KAAX,IACVK,EAAc,EAAKN,MAAMC,KAAX,QAA6B,GAUjD,OACG,uCAAKM,UAAU,0BAA6BC,gBAAMF,EAAO,4BACxD,uCAAKC,UAAU,kCAAqCC,gBAAMF,EAAO,oCAC/D,qCAAGC,UAAU,kBAAqBC,gBAAMF,EAAO,oBAAqBP,GACpE,wCAAMQ,UAAU,4BAA+BC,gBAAMF,EAAO,8BAC5D,uCAAKC,UAAU,SAAYC,gBAAMF,EAAM,QAAaJ,GACpD,uCAAKK,UAAU,0CAA6CC,gBAAMF,EAAO,4CACzE,uCAAKC,UAAU,qBAAwBC,gBAAMF,EAAO,uBAAwBH,GAC5E,qCAAGI,UAAU,iBAAoBC,gBAAMF,EAAO,kBAA9C,CAAiEG,KAAMJ,EAAKK,OAAO,WAAUN,GAC7F,uCAAKG,UAAU,gBAAmBC,gBAAMF,EAAO,iBAA/C,CAAiEK,QAAS,WAhBnEC,SAASC,cAAc,2BAC/BL,MAAMM,QAAQ,OAe0F,EAAKC,eAA5G,a,EAQAA,UAAY,WAClBC,IAAUC,kBAAkB,K,yBAtCAC,KA0CjBC,cAAwBtB,GClDvCuB,IAAStB,OACP,kBAAC,IAAMuB,WAAP,KACE,kBAAC,EAAD,OAEFT,SAASU,eAAe,W","file":"static/js/main.7243fd12.chunk.js","sourcesContent":["import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\nimport \"./icon.css\"\r\nimport \"./style2.css\"\r\nimport { style } from 'glamor';\r\n\r\n\r\n\r\nclass NicerNotification extends StreamlitComponentBase {\r\n  \r\n  public render = (): ReactNode => {\r\n    \r\n    \r\n    const icon:string = this.props.args['icon']\r\n    const title:string = this.props.args['title']\r\n    const textDisplay:any = this.props.args['textDisplay']\r\n    const externalLink:string = this.props.args['externalLink']\r\n    const url:any = this.props.args['url']\r\n    const styles: any = this.props.args['styles'] || {}\r\n    \r\n    function removeNotification() { \r\n      const el = document.querySelector('.notification-container') as HTMLElement\r\n      el.style.display='none'; \r\n      \r\n    }\r\n\r\n\r\n  \r\n    return (\r\n       <div className=\"notification-container\" {...style(styles['notification-container'])}>\r\n        <div className=\"notification-content-container\" {...style(styles['notification-content-container'])}>\r\n          <i className=\"material-icons\" {...style(styles['material-icons'])}>{icon}</i>\r\n          <span className=\"title-text-url-container\" {...style(styles['title-text-url-container'])}>\r\n          <div className=\"title\" {...style(styles['title'])}>{title}</div>\r\n          <div className=\"notification-text-link-close-container\" {...style(styles['notification-text-link-close-container'])}>\r\n          <div className=\"notification-text\" {...style(styles['notification-text'])}>{textDisplay}</div>\r\n          <a className=\"external-link\" {...style(styles['external-link'])} href={url} target=\"_blank\">{externalLink}</a>\r\n          <div className=\"close-button\" {...style(styles['close-button'])} onClick={() => {removeNotification(); this.onClicked();}}>&times;</div></div></span>\r\n        </div>\r\n      </div>\r\n      \r\n      \r\n    )\r\n  };\r\n\r\n  private onClicked = (): void => {\r\n    Streamlit.setComponentValue(\"\")\r\n  };\r\n};\r\n \r\nexport default withStreamlitConnection(NicerNotification)\r\n\r\n\r\n\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport NicerNotification from \"./NicerNotification\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <NicerNotification />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}