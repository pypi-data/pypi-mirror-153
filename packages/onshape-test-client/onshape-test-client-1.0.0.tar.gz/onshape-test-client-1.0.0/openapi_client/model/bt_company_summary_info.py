# coding: utf-8

"""
    Onshape REST API

    The Onshape REST API consumed by all client. # Authorization The simplest way to authorize and enable the **Try it out** functionality is to sign in to Onshape and use the current session. The **Authorize** button enables other authorization techniques. To ensure the current session isn't used when trying other authentication techniques, make sure to remove the Onshape cookie as per the instructions for your particular browser. Alternatively, a private or incognito window may be used. Here's [how to remove a specific cookie on Chrome](https://support.google.com/chrome/answer/95647#zippy=%2Cdelete-cookies-from-a-site). - **Current Session** authorization is enabled by default if the browser is already signed in to [Onshape](/). - **OAuth2** authorization uses an Onshape OAuth2 app created on the [Onshape Developer Portal](https://dev-portal.onshape.com/oauthApps). The redirect URL field should include `https://cad.onshape.com/glassworks/explorer/oauth2-redirect.html`. - **API Key** authorization using basic authentication is also available. The keys can be generated in the [Onshape Developer Portal](https://dev-portal.onshape.com/keys). In the authentication dialog, enter the access key in the `Username` field, and enter the secret key in the `Password` field. Basic authentication should only be used during the development process since sharing API Keys provides the same level of access as a username and password.  # noqa: E501

    The version of the OpenAPI document: 1.148.5096-9e2122142227
    Contact: api-support@onshape.zendesk.com
    Generated by: https://openapi-generator.tech
"""

import re  # noqa: F401
import sys  # noqa: F401
import typing  # noqa: F401

from frozendict import frozendict  # noqa: F401

import decimal  # noqa: F401
from datetime import date, datetime  # noqa: F401
from frozendict import frozendict  # noqa: F401

from openapi_client.schemas import (  # noqa: F401
    AnyTypeSchema,
    ComposedSchema,
    DictSchema,
    ListSchema,
    StrSchema,
    IntSchema,
    Int32Schema,
    Int64Schema,
    Float32Schema,
    Float64Schema,
    NumberSchema,
    DateSchema,
    DateTimeSchema,
    DecimalSchema,
    BoolSchema,
    BinarySchema,
    NoneSchema,
    none_type,
    InstantiationMetadata,
    Unset,
    unset,
    ComposedBase,
    ListBase,
    DictBase,
    NoneBase,
    StrBase,
    IntBase,
    Int32Base,
    Int64Base,
    Float32Base,
    Float64Base,
    NumberBase,
    DateBase,
    DateTimeBase,
    BoolBase,
    BinaryBase,
    Schema,
    _SchemaValidator,
    _SchemaTypeChecker,
    _SchemaEnumMaker
)


class BTCompanySummaryInfo(
    DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    admin = BoolSchema
    description = StrSchema
    domainPrefix = StrSchema
    enterpriseBaseUrl = StrSchema
    href = StrSchema
    id = StrSchema
    image = StrSchema
    name = StrSchema
    noPublicDocuments = BoolSchema
    ownerId = StrSchema
    
    
    class secondaryDomainPrefixes(
        _SchemaValidator(
            unique_items=True,
        ),
        ListSchema
    ):
        _items = StrSchema
    state = Int32Schema
    type = Int32Schema
    viewRef = StrSchema


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict, ],
        admin: typing.Union[admin, Unset] = unset,
        description: typing.Union[description, Unset] = unset,
        domainPrefix: typing.Union[domainPrefix, Unset] = unset,
        enterpriseBaseUrl: typing.Union[enterpriseBaseUrl, Unset] = unset,
        href: typing.Union[href, Unset] = unset,
        id: typing.Union[id, Unset] = unset,
        image: typing.Union[image, Unset] = unset,
        name: typing.Union[name, Unset] = unset,
        noPublicDocuments: typing.Union[noPublicDocuments, Unset] = unset,
        ownerId: typing.Union[ownerId, Unset] = unset,
        secondaryDomainPrefixes: typing.Union[secondaryDomainPrefixes, Unset] = unset,
        state: typing.Union[state, Unset] = unset,
        type: typing.Union[type, Unset] = unset,
        viewRef: typing.Union[viewRef, Unset] = unset,
        _instantiation_metadata: typing.Optional[InstantiationMetadata] = None,
        **kwargs: typing.Type[Schema],
    ) -> 'BTCompanySummaryInfo':
        return super().__new__(
            cls,
            *args,
            admin=admin,
            description=description,
            domainPrefix=domainPrefix,
            enterpriseBaseUrl=enterpriseBaseUrl,
            href=href,
            id=id,
            image=image,
            name=name,
            noPublicDocuments=noPublicDocuments,
            ownerId=ownerId,
            secondaryDomainPrefixes=secondaryDomainPrefixes,
            state=state,
            type=type,
            viewRef=viewRef,
            _instantiation_metadata=_instantiation_metadata,
            **kwargs,
        )
