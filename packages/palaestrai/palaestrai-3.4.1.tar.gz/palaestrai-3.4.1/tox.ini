[tox]
envlist = {py38,py39,py310}
skip_missing_interpreters=True


[cfg-black]
deps = black
commands =
    black --check -l 79 ./src/palaestrai ./tests

[cfg-mypy]
deps =  mypy
        lxml
        types-click
        types-pkg_resources
        types-mock
allowlist_externals=
    mkdir
commands =
    pip install .[dev]
    mkdir -p {toxinidir}/test_reports/mypy/
    mypy --junit-xml  {toxinidir}/test_reports/mypy/mypy.xml {toxinidir}/src {toxinidir}/tests

[cfg-unit-test]
deps =
    coverage
    pytest
    pytest-cov
    black==22.3.0
    robotframework
    types-click
    types-pkg_resources
    types-mock
allowlist_externals =
    mkdir
commands =
    python -m pip install -e .[dev]
    mkdir -p {toxinidir}/test_reports/
    pytest --cov={toxinidir}/src {toxinidir}/tests --junitxml={toxinidir}/test_reports/report.xml
    coverage xml -o {toxinidir}/test_reports/coverage.xml

[cfg-docs]
deps =
    furo
    sphinx
    jupyter
    nbsphinx
    numpydoc
    matplotlib
    eralchemy@git+https://github.com/eveith/eralchemy.git@v1.2.10.1#egg=eralchemy-1.2.10.1

[cfg-system]
deps =
    robotframework >= 4.0
    jupyter
    matplotlib
commands =
    {envbindir}/robot --outputdir {toxinidir}/test_reports/system/{envname}/ tests/system
passenv = POSTGRES_*

[testenv]
deps =
    {[cfg-black]deps}
    {[cfg-mypy]deps}
    {[cfg-unit-test]deps}
    {[cfg-system]deps}
allowlist_externals=
    {[cfg-unit-test]allowlist_externals}
commands =
    {[cfg-black]commands}
    {[cfg-mypy]commands}
    {[cfg-unit-test]commands}
    {[cfg-system]commands}
passenv = {[cfg-system]passenv}

[testenv:black]
deps = {[cfg-black]deps}
commands = {[cfg-black]commands}

[testenv:mypy]
deps = {[cfg-mypy]deps}
allowlist_externals= {[cfg-mypy]allowlist_externals}
commands = {[cfg-mypy]commands}

[testenv:unit-test]
deps =
    {[cfg-unit-test]deps}
allowlist_externals=
    {[cfg-unit-test]allowlist_externals}
commands =
    {[cfg-unit-test]commands}

[testenv:system]
deps =
    {[cfg-system]deps}
    {[cfg-docs]deps}
commands =
    {[cfg-system]commands}
passenv = {[cfg-system]passenv}

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
deps = {[cfg-docs]deps}
commands =
    sphinx-build -v -d "{toxworkdir}/docs_doctree" doc "{toxworkdir}/docs_out" --color -W -bhtml {posargs}
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'

[testenv:unit-docker]
skip_install=true
deps = docker-compose >= 1.29
commands =
    docker-compose -f {toxinidir}/containers/system-test-docker-compose.yml --profile unit build --no-cache
    docker-compose -f {toxinidir}/containers/system-test-docker-compose.yml --profile unit up --exit-code-from palaestrai_unit_test

[testenv:system-docker]
skip_install=true
deps = docker-compose >= 1.29
commands =
    docker-compose -f {toxinidir}/containers/system-test-docker-compose.yml --profile system build --no-cache
    docker-compose -f {toxinidir}/containers/system-test-docker-compose.yml --profile system up --exit-code-from palaestrai_system_test

[testenv:full-docker]
skip_install=true
deps = docker-compose >= 1.29
commands =
    docker-compose rm -f
    docker-compose -f {toxinidir}/containers/system-test-docker-compose.yml --profile full build
    docker-compose -f {toxinidir}/containers/system-test-docker-compose.yml --profile full up --abort-on-container-exit palaestrai_full_test
