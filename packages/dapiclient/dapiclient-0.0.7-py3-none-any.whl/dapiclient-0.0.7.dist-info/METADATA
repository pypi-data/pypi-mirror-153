Metadata-Version: 2.1
Name: dapiclient
Version: 0.0.7
Summary: A python client SDK for DASH Platform
Home-page: https://github.com/mayoreee/dapi-client-py
Author: mayoreee
Project-URL: Source Code, https://github.com/mayoreee/dapi-client-py
Project-URL: Bug Tracker, https://github.com/mayoreee/dapi-client-py/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: base58 (>='2.1.0')
Requires-Dist: cbor2 (>='5.4.0')
Requires-Dist: certifi (>='2021.5.30')
Requires-Dist: charset-normalizer (>='2.0.3')
Requires-Dist: grpcio (>='1.38.1')
Requires-Dist: idna (>='3.2')
Requires-Dist: protobuf (>='3.17.3')
Requires-Dist: requests (>='2.26.0')
Requires-Dist: six (>='1.16.0')
Requires-Dist: urllib3 (>='1.26.6')

A very basic DAPI client. Only supports retrieving from some JSON-RPC and gRPC
endpoints. No validation of anything. No submitting of data, tx creation,
signing, etc.

# Requirements

```
python3
python3-venv
```

# Quickstart


```
git clone https://github.com/mayoreee/dapi-client-py.git
cd dapi-client-py
python3 -m venv dapiclient-venv
source dapiclient-venv/bin/activate
pip install -r requirements.txt
python install .

# Check masternode list
python dapiclient/test-mndiscovery.py

# Check DAPI client functionality
python dapiclient/test-dapiclient.py
```

# Examples


## Layer 1

```python
from dapiclient.client import DAPIClient

client = DAPIClient()

current_block_hash = client.getBestBlockHash()
print(current_block_hash)

height = 0
genesis_block_hash = client.getBlockHash(height)
print(genesis_block_hash)
```


## Layer 2

```python
from dapiclient.client import DAPIClient
import cbor2

client = DAPIClient()

id = client.getIdentity('C7id2mah2RkiroiTy6h134hLgS6A47jhh5x91tvw16bz')
print(id)

# Retrieve DPNS contract
contract = client.getDataContract('ARQGUnPH3YMK8FZuqwUjnTWEF6Zu4Cf3sT6e1Ruu1RXk')
print(contract)

# Retrieve 5 domain names from DPNS
docs = client.getDocuments(
    'ARQGUnPH3YMK8FZuqwUjnTWEF6Zu4Cf3sT6e1Ruu1RXk',
    'note',
    limit=1
)
print('{} documents retrieved'.format(len(docs)))
for doc in docs:
    print('Document:\n\t{}\n'.format(cbor2.loads(doc)))
```
