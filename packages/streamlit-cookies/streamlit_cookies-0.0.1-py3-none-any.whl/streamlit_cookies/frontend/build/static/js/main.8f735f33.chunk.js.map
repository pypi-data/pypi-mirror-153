{"version":3,"sources":["MyComponent.tsx","index.tsx"],"names":["last_output","cookies","Cookies","withStreamlitConnection","props","args","method","cookie","value","options","output","set","setCookie","get","getCookie","getAll","remove","deleteCookie","JSON","stringify","Streamlit","setComponentValue","setComponentReady","useEffect","setFrameHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAQIA,EAAkB,KAChBC,EAAU,IAAIC,IA0DLC,eAxDO,SAACC,GACrB,IAmBQC,EAASD,EAATC,KAEFC,EAASD,EAAI,OACbE,EAASF,EAAI,OACbG,EAAQH,EAAI,MACZI,EAAUJ,EAAI,SAAe,GAE/BK,EAAS,KAEb,OAAQJ,GACN,IAAK,MACHI,EA9Bc,SAACH,EAAYC,EAAWC,GAExC,OADAR,EAAQU,IAAIJ,EAAQC,EAAOC,IACpB,EA4BIG,CAAUL,EAAQC,EAAOC,GAClC,MACF,IAAK,MACHC,EA5Bc,SAACH,GAEjB,OADcN,EAAQY,IAAIN,GA2BfO,CAAUP,GACnB,MACF,IAAK,SACHG,EApBKT,EAAQc,SAqBb,MACF,IAAK,SACHL,EA7BiB,SAACH,EAAYE,GAEhC,OADAR,EAAQe,OAAOT,EAAQE,IAChB,EA2BIQ,CAAaV,EAAQE,GAalC,OAPIC,GAAUQ,KAAKC,UAAUnB,IAAgBkB,KAAKC,UAAUT,KAC1DV,EAAcU,EACdU,IAAUC,kBAAkBX,GAC5BU,IAAUE,qBAGZC,qBAAU,kBAAMH,IAAUI,oBACnB,iCC5DTC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.8f735f33.chunk.js","sourcesContent":["import {\r\n  Streamlit,\r\n  ComponentProps,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport Cookies from \"universal-cookie\"\r\n\r\nlet last_output:any = null\r\nconst cookies = new Cookies()\r\n\r\nconst CookieManager = (props: ComponentProps) => {\r\n  const setCookie = (cookie:any, value:any, options:any) => {\r\n    cookies.set(cookie, value, options)\r\n    return true\r\n  }\r\n\r\n  const getCookie = (cookie:any) => {\r\n    const value = cookies.get(cookie)\r\n    return value\r\n  }\r\n\r\n  const deleteCookie = (cookie:any, options:any) => {\r\n    cookies.remove(cookie, options)\r\n    return true\r\n  }\r\n\r\n  const getAllCookies = () => {\r\n    return cookies.getAll()\r\n  }\r\n\r\n  const { args } = props\r\n\r\n  const method = args[\"method\"]\r\n  const cookie = args[\"cookie\"]\r\n  const value = args[\"value\"]\r\n  const options = args['options'] || {}\r\n\r\n  let output = null\r\n\r\n  switch (method) {\r\n    case \"set\":\r\n      output = setCookie(cookie, value, options)\r\n      break\r\n    case \"get\":\r\n      output = getCookie(cookie)\r\n      break\r\n    case \"getAll\":\r\n      output = getAllCookies()\r\n      break\r\n    case \"delete\":\r\n      output = deleteCookie(cookie, options)\r\n      break\r\n    default:\r\n      break\r\n  }\r\n\r\n  if (output && JSON.stringify(last_output) != JSON.stringify(output)) {\r\n    last_output = output\r\n    Streamlit.setComponentValue(output)\r\n    Streamlit.setComponentReady()\r\n  }\r\n\r\n  useEffect(() => Streamlit.setFrameHeight())\r\n  return <div></div>\r\n}\r\n\r\nexport default withStreamlitConnection(CookieManager)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport CookieManager from \"./MyComponent\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CookieManager />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}