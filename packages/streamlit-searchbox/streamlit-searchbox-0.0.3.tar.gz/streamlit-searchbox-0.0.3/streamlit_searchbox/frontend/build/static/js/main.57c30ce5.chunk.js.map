{"version":3,"sources":["magnifying-glass-solid.svg","Searchbox.tsx","index.tsx"],"names":["module","exports","SearchIcon","width","src","SearchIconSvg","alt","title","style","marginLeft","marginRight","padding","Searchbox","state","search","option","focus","onSearchInput","input","_","length","setState","Streamlit","setComponentValue","onInputSelection","value","render","isSearchActive","components","DropdownIndicator","placeholder","onInputChange","e","a","onChange","isSearchable","filterOption","__","menuIsOpen","options","props","args","onFocus","onBlur","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"gIAAAA,EAAOC,QAAU,IAA0B,oD,4KCgBrCC,EACJ,yBACEC,MAAO,GACPC,IAAKC,IACLC,IAAI,cACJC,MAAM,cACNC,MAAO,CAAEC,WAAY,MAAOC,YAAa,MAAOC,QAAS,SAIvDC,E,4MACGC,MAAQ,CAAEC,OAAQ,GAAIC,OAAQ,KAAMC,OAAO,G,EAG1CC,cAAgB,SAACC,EAAeC,GAClCD,EAAME,OAAS,GACjB,EAAKC,SAAS,CAAEP,OAAQI,EAAOH,OAAQ,KAAMC,OAAO,IAAQ,kBAC1DM,IAAUC,kBAAkB,EAAKV,W,EAM/BW,iBAAmB,SAACT,GAC1B,EAAKM,SACH,CACEP,OAAQ,GACRE,OAAO,EACPD,OAAQA,EAAOU,QAEjB,kBAAMH,IAAUC,kBAAkB,EAAKV,W,EAQpCa,OAAS,WACd,IAAIC,EAAuC,KAAtB,EAAKd,MAAMC,OAEhC,OACE,kBAAC,IAAD,CACEc,WAAY,CACVC,kBAAmB,kBAAM3B,IAE3B4B,YAAa,aACbC,cAAe,SAACC,EAAGC,GAAJ,OAAU,EAAKhB,cAAce,EAAGC,IAC/CC,SAAU,SAACF,GAAD,OAAO,EAAKR,iBAAiBQ,IACvCG,cAAc,EAEdC,aAAc,SAACjB,EAAGkB,GAAJ,OAAW,GAEzBC,WAAYX,GAAkB,EAAKd,MAAMG,MACzCuB,QAASZ,EAAiB,EAAKa,MAAMC,KAAX,QAA6B,GACvDC,QAAS,kBAAM,EAAKrB,SAAS,CAAEL,OAAO,KACtC2B,OAAQ,kBAAM,EAAKtB,SAAS,CAAEL,OAAO,Q,yBA9CrB4B,KAoDTC,cAAwBjC,GC1EvCkC,IAASpB,OACP,kBAAC,IAAMqB,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.57c30ce5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/magnifying-glass-solid.b713a401.svg\";","import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport Select from \"react-select\"\n\nimport { default as SearchIconSvg } from \"./magnifying-glass-solid.svg\"\n\ninterface State {\n  search: string\n  option: any\n  focus: boolean\n}\n\nconst SearchIcon = (\n  <img\n    width={24}\n    src={SearchIconSvg}\n    alt=\"Search Icon\"\n    title=\"Search Icon\"\n    style={{ marginLeft: \"6px\", marginRight: \"6px\", padding: \"4px\" }}\n  />\n)\n\nclass Searchbox extends StreamlitComponentBase<State> {\n  public state = { search: \"\", option: null, focus: false }\n\n  // new keystroke on searchbox\n  private onSearchInput = (input: string, _: any): void => {\n    if (input.length > 0) {\n      this.setState({ search: input, option: null, focus: true }, () =>\n        Streamlit.setComponentValue(this.state)\n      )\n    }\n  }\n\n  // input was selected from dropdown\n  private onInputSelection = (option: any): void => {\n    this.setState(\n      {\n        search: \"\",\n        focus: false,\n        option: option.value,\n      },\n      () => Streamlit.setComponentValue(this.state)\n    )\n  }\n\n  /**\n   *\n   * @returns\n   */\n  public render = (): ReactNode => {\n    let isSearchActive = this.state.search !== \"\"\n\n    return (\n      <Select\n        components={{\n          DropdownIndicator: () => SearchIcon,\n        }}\n        placeholder={\"Search ...\"}\n        onInputChange={(e, a) => this.onSearchInput(e, a)}\n        onChange={(e) => this.onInputSelection(e)}\n        isSearchable={true}\n        // show all options, filtering should be done in python\n        filterOption={(_, __) => true}\n        // always show dropdown\n        menuIsOpen={isSearchActive && this.state.focus}\n        options={isSearchActive ? this.props.args[\"options\"] : []}\n        onFocus={() => this.setState({ focus: true })}\n        onBlur={() => this.setState({ focus: false })}\n      />\n    )\n  }\n}\n\nexport default withStreamlitConnection(Searchbox)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Searchbox from \"./Searchbox\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Searchbox />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}