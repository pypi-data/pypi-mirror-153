Metadata-Version: 2.1
Name: comperm
Version: 2022.6.0
Summary: Combination and permutation operations.
Author-email: "谢方圆 (XIE Fangyuan)" <xie.fangyuan@foxmail.com>
License: MIT License
        
        Copyright (c) 2022 谢方圆 (XIE Fangyuan)
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://gitee.com/xie-fangyuan/comperm
Keywords: combination,permutation
Classifier: Programming Language :: Python :: 3.10
Classifier: Operating System :: OS Independent
Classifier: License :: OSI Approved :: MIT License
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE.txt

# ComPerm

Version `2022.6.0`

Combination and permutation operations.

## Installation

```shell
pip install comperm
```

## Combination Operations

```python
from comperm.com_op import ComOp

# Get the number of combinations given n and k
print(ComOp.get_num(n=5, k=2))  # 10

# Get the lexicographical ordinal of a combination given n
print(ComOp.combination_to_ordinal(n=5, combination=[2, 3]))  # 4

# Get the combination given n, k and its lexicographical ordinal
print(ComOp.ordinal_to_combination(n=5, k=2, o=4))  # [2, 3]
```

## Permutation Operations

```python
from comperm.per_op import PerOp

# Get the number of permutations given n and k
print(PerOp.get_num(n=5, k=2))  # 20

# Get the lexicographical ordinal of a permutation given n
print(PerOp.permutation_to_ordinal(n=5, permutation=[2, 3]))  # 5

# Get the permutation given n, k and its lexicographical ordinal
print(PerOp.ordinal_to_permutation(n=5, k=2, o=5))  # [2, 3]
```

## Unit Test

Run testcases in all files:

```shell
PYTHONPATH='src' python -m unittest discover -s tests
```

Run testcases in a file:

```shell
python -m unittest tests/test_combinatorics_op.py
python -m unittest tests/test_com_op.py
python -m unittest tests/test_per_op.py
```
