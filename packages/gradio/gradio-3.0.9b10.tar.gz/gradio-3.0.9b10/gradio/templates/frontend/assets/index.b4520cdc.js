import{S as K,i as L,s as M,d as _,o as N,v as V,y as U,h as y,w as D,k as z,b as p,c as C,t as q,e as g,f as v,l as ee,a9 as F,m as A,g as k,B as x,C as E,D as P,E as j,F as B,u as oe,R as H,T as te,I as se,L as ne,K as ce,U as re,V as ie,M as le}from"./index.3cb8de18.js";import{c as S}from"./styles.d87a390f.js";import{B as J}from"./BlockTitle.61d315b4.js";import{B as Q}from"./Block.0aee9c3b.js";const G="Users/aliabid/projects/gradio/ui/packages/form/src/CheckboxGroup.svelte";function I(t,e,o){const r=t.slice();return r[9]=e[o],r[11]=o,r}function W(t){let e;const o={c:function(){e=z(t[4])},m:function(f,s){g(f,e,s)},p:function(f,s){s&16&&A(e,f[4])},d:function(f){f&&k(e)}};return _("SvelteRegisterBlock",{block:o,id:W.name,type:"slot",source:"(23:0) <BlockTitle {show_label}>",ctx:t}),o}function R(t){let e,o,r,f,s,l=t[9]+"",u,b,a,d;function h(){return t[7](t[9])}const i={c:function(){e=y("label"),o=y("input"),f=D(),s=y("span"),u=z(l),o.disabled=t[3],o.checked=r=t[0].includes(t[9]),p(o,"type","checkbox"),p(o,"name","test"),p(o,"class","gr-check-radio gr-checkbox"),C(o,G,31,3,947),p(s,"class","ml-2"),C(s,G,38,6,1130),p(e,"class",b="gr-input-label flex items-center text-gray-700 text-sm space-x-2 border py-1.5 px-3 rounded-lg cursor-pointer shadow-sm checked:shadow-inner"+S(t[1])),q(e,"!cursor-not-allowed",t[3]),C(e,G,26,2,711)},m:function(w,n){g(w,e,n),v(e,o),v(e,f),v(e,s),v(s,u),a||(d=ee(o,"change",h,!1,!1,!1),a=!0)},p:function(w,n){t=w,n&8&&F(o,"disabled",t[3]),n&5&&r!==(r=t[0].includes(t[9]))&&F(o,"checked",r),n&4&&l!==(l=t[9]+"")&&A(u,l),n&2&&b!==(b="gr-input-label flex items-center text-gray-700 text-sm space-x-2 border py-1.5 px-3 rounded-lg cursor-pointer shadow-sm checked:shadow-inner"+S(t[1]))&&p(e,"class",b),n&10&&q(e,"!cursor-not-allowed",t[3])},d:function(w){w&&k(e),a=!1,d()}};return _("SvelteRegisterBlock",{block:i,id:R.name,type:"each",source:"(26:1) {#each choices as choice, i}",ctx:t}),i}function O(t){let e,o,r,f;e=new J({props:{show_label:t[5],$$slots:{default:[W]},$$scope:{ctx:t}},$$inline:!0});let s=t[2];N(s);let l=[];for(let b=0;b<s.length;b+=1)l[b]=R(I(t,s,b));const u={c:function(){x(e.$$.fragment),o=D(),r=y("div");for(let a=0;a<l.length;a+=1)l[a].c();p(r,"class","flex flex-wrap gap-2"),p(r,"data-testid","checkbox-group"),C(r,G,24,0,615)},l:function(a){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(a,d){E(e,a,d),g(a,o,d),g(a,r,d);for(let h=0;h<l.length;h+=1)l[h].m(r,null);f=!0},p:function(a,[d]){const h={};if(d&32&&(h.show_label=a[5]),d&4112&&(h.$$scope={dirty:d,ctx:a}),e.$set(h),d&79){s=a[2],N(s);let i;for(i=0;i<s.length;i+=1){const m=I(a,s,i);l[i]?l[i].p(m,d):(l[i]=R(m),l[i].c(),l[i].m(r,null))}for(;i<l.length;i+=1)l[i].d(1);l.length=s.length}},i:function(a){f||(P(e.$$.fragment,a),f=!0)},o:function(a){j(e.$$.fragment,a),f=!1},d:function(a){B(e,a),a&&k(o),a&&k(r),oe(l,a)}};return _("SvelteRegisterBlock",{block:u,id:O.name,type:"component",source:"",ctx:t}),u}function ae(t,e,o){let{$$slots:r={},$$scope:f}=e;V("CheckboxGroup",r,[]);let{value:s=[]}=e,{style:l={}}=e,{choices:u}=e,{disabled:b=!1}=e,{label:a}=e,{show_label:d}=e;const h=U(),i=n=>{s.includes(n)?s.splice(s.indexOf(n),1):s.push(n),h("change",s),o(0,s)},m=["value","style","choices","disabled","label","show_label"];Object.keys(e).forEach(n=>{!~m.indexOf(n)&&n.slice(0,2)!=="$$"&&n!=="slot"&&console.warn(`<CheckboxGroup> was created with unknown prop '${n}'`)});const w=n=>i(n);return t.$$set=n=>{"value"in n&&o(0,s=n.value),"style"in n&&o(1,l=n.style),"choices"in n&&o(2,u=n.choices),"disabled"in n&&o(3,b=n.disabled),"label"in n&&o(4,a=n.label),"show_label"in n&&o(5,d=n.show_label)},t.$capture_state=()=>({createEventDispatcher:U,BlockTitle:J,create_classes:S,value:s,style:l,choices:u,disabled:b,label:a,show_label:d,dispatch:h,toggleChoice:i}),t.$inject_state=n=>{"value"in n&&o(0,s=n.value),"style"in n&&o(1,l=n.style),"choices"in n&&o(2,u=n.choices),"disabled"in n&&o(3,b=n.disabled),"label"in n&&o(4,a=n.label),"show_label"in n&&o(5,d=n.show_label)},e&&"$$inject"in e&&t.$inject_state(e.$$inject),[s,l,u,b,a,d,i,w]}class X extends K{constructor(e){super(e),L(this,e,ae,O,M,{value:0,style:1,choices:2,disabled:3,label:4,show_label:5}),_("SvelteRegisterComponent",{component:this,tagName:"CheckboxGroup",options:e,id:O.name});const{ctx:o}=this.$$,r=e.props||{};o[2]===void 0&&!("choices"in r)&&console.warn("<CheckboxGroup> was created without expected prop 'choices'"),o[4]===void 0&&!("label"in r)&&console.warn("<CheckboxGroup> was created without expected prop 'label'"),o[5]===void 0&&!("show_label"in r)&&console.warn("<CheckboxGroup> was created without expected prop 'show_label'")}get value(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set value(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get style(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set style(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get choices(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set choices(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get disabled(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set disabled(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get label(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set label(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get show_label(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set show_label(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}function Y(t){let e,o,r,f,s;const l=[t[9]];let u={};for(let h=0;h<l.length;h+=1)u=te(u,l[h]);e=new H({props:u,$$inline:!0});function b(h){t[10](h)}let a={choices:t[3],label:t[6],style:t[4],show_label:t[8],disabled:t[5]==="static"};t[0]!==void 0&&(a.value=t[0]),r=new X({props:a,$$inline:!0}),se.push(()=>ne(r,"value",b)),r.$on("change",t[11]);const d={c:function(){x(e.$$.fragment),o=D(),x(r.$$.fragment)},m:function(i,m){E(e,i,m),g(i,o,m),E(r,i,m),s=!0},p:function(i,m){const w=m&512?re(l,[ie(i[9])]):{};e.$set(w);const n={};m&8&&(n.choices=i[3]),m&64&&(n.label=i[6]),m&16&&(n.style=i[4]),m&256&&(n.show_label=i[8]),m&32&&(n.disabled=i[5]==="static"),!f&&m&1&&(f=!0,n.value=i[0],le(()=>f=!1)),r.$set(n)},i:function(i){s||(P(e.$$.fragment,i),P(r.$$.fragment,i),s=!0)},o:function(i){j(e.$$.fragment,i),j(r.$$.fragment,i),s=!1},d:function(i){B(e,i),i&&k(o),B(r,i)}};return _("SvelteRegisterBlock",{block:d,id:Y.name,type:"slot",source:'(16:0) <Block {form_position} {elem_id} {visible} {style} type=\\"fieldset\\">',ctx:t}),d}function T(t){let e,o;e=new Q({props:{form_position:t[7],elem_id:t[1],visible:t[2],style:t[4],type:"fieldset",$$slots:{default:[Y]},$$scope:{ctx:t}},$$inline:!0});const r={c:function(){x(e.$$.fragment)},l:function(s){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(s,l){E(e,s,l),o=!0},p:function(s,[l]){const u={};l&128&&(u.form_position=s[7]),l&2&&(u.elem_id=s[1]),l&4&&(u.visible=s[2]),l&16&&(u.style=s[4]),l&4985&&(u.$$scope={dirty:l,ctx:s}),e.$set(u)},i:function(s){o||(P(e.$$.fragment,s),o=!0)},o:function(s){j(e.$$.fragment,s),o=!1},d:function(s){B(e,s)}};return _("SvelteRegisterBlock",{block:r,id:T.name,type:"component",source:"",ctx:t}),r}function ue(t,e,o){let{$$slots:r={},$$scope:f}=e;V("CheckboxGroup",r,[]);let{elem_id:s=""}=e,{visible:l=!0}=e,{value:u=[]}=e,{choices:b}=e,{style:a={}}=e,{mode:d}=e,{label:h="Checkbox Group"}=e,{form_position:i="single"}=e,{show_label:m}=e,{loading_status:w}=e;const n=["elem_id","visible","value","choices","style","mode","label","form_position","show_label","loading_status"];Object.keys(e).forEach(c=>{!~n.indexOf(c)&&c.slice(0,2)!=="$$"&&c!=="slot"&&console.warn(`<CheckboxGroup> was created with unknown prop '${c}'`)});function Z(c){u=c,o(0,u)}function $(c){ce.call(this,t,c)}return t.$$set=c=>{"elem_id"in c&&o(1,s=c.elem_id),"visible"in c&&o(2,l=c.visible),"value"in c&&o(0,u=c.value),"choices"in c&&o(3,b=c.choices),"style"in c&&o(4,a=c.style),"mode"in c&&o(5,d=c.mode),"label"in c&&o(6,h=c.label),"form_position"in c&&o(7,i=c.form_position),"show_label"in c&&o(8,m=c.show_label),"loading_status"in c&&o(9,w=c.loading_status)},t.$capture_state=()=>({CheckboxGroup:X,Block:Q,StatusTracker:H,elem_id:s,visible:l,value:u,choices:b,style:a,mode:d,label:h,form_position:i,show_label:m,loading_status:w}),t.$inject_state=c=>{"elem_id"in c&&o(1,s=c.elem_id),"visible"in c&&o(2,l=c.visible),"value"in c&&o(0,u=c.value),"choices"in c&&o(3,b=c.choices),"style"in c&&o(4,a=c.style),"mode"in c&&o(5,d=c.mode),"label"in c&&o(6,h=c.label),"form_position"in c&&o(7,i=c.form_position),"show_label"in c&&o(8,m=c.show_label),"loading_status"in c&&o(9,w=c.loading_status)},e&&"$$inject"in e&&t.$inject_state(e.$$inject),[u,s,l,b,a,d,h,i,m,w,Z,$]}class he extends K{constructor(e){super(e),L(this,e,ue,T,M,{elem_id:1,visible:2,value:0,choices:3,style:4,mode:5,label:6,form_position:7,show_label:8,loading_status:9}),_("SvelteRegisterComponent",{component:this,tagName:"CheckboxGroup_1",options:e,id:T.name});const{ctx:o}=this.$$,r=e.props||{};o[3]===void 0&&!("choices"in r)&&console.warn("<CheckboxGroup> was created without expected prop 'choices'"),o[5]===void 0&&!("mode"in r)&&console.warn("<CheckboxGroup> was created without expected prop 'mode'"),o[8]===void 0&&!("show_label"in r)&&console.warn("<CheckboxGroup> was created without expected prop 'show_label'"),o[9]===void 0&&!("loading_status"in r)&&console.warn("<CheckboxGroup> was created without expected prop 'loading_status'")}get elem_id(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_id(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get visible(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set visible(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get value(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set value(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get choices(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set choices(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get style(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set style(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get mode(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set mode(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get label(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set label(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get form_position(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set form_position(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get show_label(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set show_label(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get loading_status(){throw new Error("<CheckboxGroup>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set loading_status(e){throw new Error("<CheckboxGroup>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}var we=he;const pe=["static","dynamic"];export{we as Component,pe as modes};
