import{S as d,i as h,s as w,d as u,v as y,Z as g,B as b,C as B,D as f,E as m,F as v,_ as k,$ as x,a0 as E}from"./index.91cf1cec.js";import{B as p}from"./Block.13c7ad76.js";import"./styles.db46e346.js";function _(r){let e;const c=r[2].default,n=g(c,r,r[3],null),i={c:function(){n&&n.c()},m:function(t,a){n&&n.m(t,a),e=!0},p:function(t,a){n&&n.p&&(!e||a&8)&&k(n,c,t,t[3],e?E(c,t[3],a,null):x(t[3]),null)},i:function(t){e||(f(n,t),e=!0)},o:function(t){m(n,t),e=!1},d:function(t){n&&n.d(t)}};return u("SvelteRegisterBlock",{block:i,id:_.name,type:"slot",source:"(10:0) <Block explicit_call>",ctx:r}),i}function l(r){let e,c;e=new p({props:{explicit_call:!0,$$slots:{default:[_]},$$scope:{ctx:r}},$$inline:!0});const n={c:function(){b(e.$$.fragment)},l:function(o){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(o,t){B(e,o,t),c=!0},p:function(o,[t]){const a={};t&8&&(a.$$scope={dirty:t,ctx:o}),e.$set(a)},i:function(o){c||(f(e.$$.fragment,o),c=!0)},o:function(o){m(e.$$.fragment,o),c=!1},d:function(o){v(e,o)}};return u("SvelteRegisterBlock",{block:n,id:l.name,type:"component",source:"",ctx:r}),n}function j(r,e,c){let{$$slots:n={},$$scope:i}=e;y("Box",n,["default"]);let{parent:o=null}=e,{style:t={}}=e;typeof t.mobile_collapse!="boolean"&&(t.mobile_collapse=!0);const a=["parent","style"];return Object.keys(e).forEach(s=>{!~a.indexOf(s)&&s.slice(0,2)!=="$$"&&s!=="slot"&&console.warn(`<Box> was created with unknown prop '${s}'`)}),r.$$set=s=>{"parent"in s&&c(1,o=s.parent),"style"in s&&c(0,t=s.style),"$$scope"in s&&c(3,i=s.$$scope)},r.$capture_state=()=>({Block:p,parent:o,style:t}),r.$inject_state=s=>{"parent"in s&&c(1,o=s.parent),"style"in s&&c(0,t=s.style)},e&&"$$inject"in e&&r.$inject_state(e.$$inject),[t,o,n,i]}class S extends d{constructor(e){super(e),h(this,e,j,l,w,{parent:1,style:0}),u("SvelteRegisterComponent",{component:this,tagName:"Box",options:e,id:l.name})}get parent(){throw new Error("<Box>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set parent(e){throw new Error("<Box>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get style(){throw new Error("<Box>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set style(e){throw new Error("<Box>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}var D=S;const O=["static"];export{D as Component,O as modes};
