import{S as K,i as L,s as M,d as w,v as V,y as R,ab as C,h as D,B as p,w as z,b as g,c as O,e as B,C as v,f as T,aa as U,l as q,a9 as x,ap as A,D as y,E as N,g as S,F as E,r as $,k as ee,m as te,R as G,T as se,I as ne,L as oe,K as F,U as re,V as ie,M as le}from"./index.f70aa7a7.js";import{B as H}from"./Block.288f0cd5.js";import{c as k}from"./styles.d87a390f.js";import{B as J}from"./BlockTitle.199f2dc9.js";const I="mnt/c/Users/islam/dev/gradio-repos/gradio/ui/packages/form/src/Number.svelte";function Q(n){let e;const t={c:function(){e=ee(n[3])},m:function(c,r){B(c,e,r)},p:function(c,r){r&8&&te(e,c[3])},d:function(c){c&&S(e)}};return w("SvelteRegisterBlock",{block:t,id:Q.name,type:"slot",source:"(27:1) <BlockTitle {show_label}>",ctx:n}),t}function P(n){let e,t,a,c,r,u,m,d;t=new J({props:{show_label:n[4],$$slots:{default:[Q]},$$scope:{ctx:n}},$$inline:!0});const h={c:function(){e=D("label"),p(t.$$.fragment),a=z(),c=D("input"),g(c,"type","number"),g(c,"class",r="gr-box gr-input w-full gr-text-input"+k(n[1])),c.disabled=n[2],O(c,I,27,1,733),g(e,"class","block"),O(e,I,25,0,663)},l:function(l){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(l,i){B(l,e,i),v(t,e,null),T(e,a),T(e,c),U(c,n[0]),u=!0,m||(d=[q(c,"input",n[6]),q(c,"keypress",n[5],!1,!1,!1)],m=!0)},p:function(l,[i]){const b={};i&16&&(b.show_label=l[4]),i&520&&(b.$$scope={dirty:i,ctx:l}),t.$set(b),(!u||i&2&&r!==(r="gr-box gr-input w-full gr-text-input"+k(l[1])))&&g(c,"class",r),(!u||i&4)&&x(c,"disabled",l[2]),i&1&&A(c.value)!==l[0]&&U(c,l[0])},i:function(l){u||(y(t.$$.fragment,l),u=!0)},o:function(l){N(t.$$.fragment,l),u=!1},d:function(l){l&&S(e),E(t),m=!1,$(d)}};return w("SvelteRegisterBlock",{block:h,id:P.name,type:"component",source:"",ctx:n}),h}function ce(n,e,t){let{$$slots:a={},$$scope:c}=e;V("Number",a,[]);let{value:r=0}=e,{style:u={}}=e,{disabled:m=!1}=e,{label:d}=e,{show_label:h}=e;const f=R();function l(o){!isNaN(o)&&o!==null&&f("change",o)}async function i(o){await C(),o.key==="Enter"&&(o.preventDefault(),f("submit"))}const b=["value","style","disabled","label","show_label"];Object.keys(e).forEach(o=>{!~b.indexOf(o)&&o.slice(0,2)!=="$$"&&o!=="slot"&&console.warn(`<Number> was created with unknown prop '${o}'`)});function _(){r=A(this.value),t(0,r)}return n.$$set=o=>{"value"in o&&t(0,r=o.value),"style"in o&&t(1,u=o.style),"disabled"in o&&t(2,m=o.disabled),"label"in o&&t(3,d=o.label),"show_label"in o&&t(4,h=o.show_label)},n.$capture_state=()=>({createEventDispatcher:R,tick:C,create_classes:k,BlockTitle:J,value:r,style:u,disabled:m,label:d,show_label:h,dispatch:f,handle_change:l,handle_keypress:i}),n.$inject_state=o=>{"value"in o&&t(0,r=o.value),"style"in o&&t(1,u=o.style),"disabled"in o&&t(2,m=o.disabled),"label"in o&&t(3,d=o.label),"show_label"in o&&t(4,h=o.show_label)},e&&"$$inject"in e&&n.$inject_state(e.$$inject),n.$$.update=()=>{n.$$.dirty&1&&l(r)},[r,u,m,d,h,i,_]}class W extends K{constructor(e){super(e),L(this,e,ce,P,M,{value:0,style:1,disabled:2,label:3,show_label:4}),w("SvelteRegisterComponent",{component:this,tagName:"Number",options:e,id:P.name});const{ctx:t}=this.$$,a=e.props||{};t[3]===void 0&&!("label"in a)&&console.warn("<Number> was created without expected prop 'label'"),t[4]===void 0&&!("show_label"in a)&&console.warn("<Number> was created without expected prop 'show_label'")}get value(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set value(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get style(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set style(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get disabled(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set disabled(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get label(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set label(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get show_label(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set show_label(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}function X(n){let e,t,a,c,r;const u=[n[7]];let m={};for(let l=0;l<u.length;l+=1)m=se(m,u[l]);e=new G({props:m,$$inline:!0});function d(l){n[9](l)}let h={label:n[1],show_label:n[6],style:n[4],disabled:n[8]==="static"};n[0]!==void 0&&(h.value=n[0]),a=new W({props:h,$$inline:!0}),ne.push(()=>oe(a,"value",d)),a.$on("change",n[10]),a.$on("submit",n[11]);const f={c:function(){p(e.$$.fragment),t=z(),p(a.$$.fragment)},m:function(i,b){v(e,i,b),B(i,t,b),v(a,i,b),r=!0},p:function(i,b){const _=b&128?re(u,[ie(i[7])]):{};e.$set(_);const o={};b&2&&(o.label=i[1]),b&64&&(o.show_label=i[6]),b&16&&(o.style=i[4]),b&256&&(o.disabled=i[8]==="static"),!c&&b&1&&(c=!0,o.value=i[0],le(()=>c=!1)),a.$set(o)},i:function(i){r||(y(e.$$.fragment,i),y(a.$$.fragment,i),r=!0)},o:function(i){N(e.$$.fragment,i),N(a.$$.fragment,i),r=!1},d:function(i){E(e,i),i&&S(t),E(a,i)}};return w("SvelteRegisterBlock",{block:f,id:X.name,type:"slot",source:"(15:0) <Block {form_position} {elem_id} {visible} {style}>",ctx:n}),f}function j(n){let e,t;e=new H({props:{form_position:n[5],elem_id:n[2],visible:n[3],style:n[4],$$slots:{default:[X]},$$scope:{ctx:n}},$$inline:!0});const a={c:function(){p(e.$$.fragment)},l:function(r){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(r,u){v(e,r,u),t=!0},p:function(r,[u]){const m={};u&32&&(m.form_position=r[5]),u&4&&(m.elem_id=r[2]),u&8&&(m.visible=r[3]),u&16&&(m.style=r[4]),u&4563&&(m.$$scope={dirty:u,ctx:r}),e.$set(m)},i:function(r){t||(y(e.$$.fragment,r),t=!0)},o:function(r){N(e.$$.fragment,r),t=!1},d:function(r){E(e,r)}};return w("SvelteRegisterBlock",{block:a,id:j.name,type:"component",source:"",ctx:n}),a}function ae(n,e,t){let{$$slots:a={},$$scope:c}=e;V("Number",a,[]);let{label:r="Number"}=e,{elem_id:u=""}=e,{visible:m=!0}=e,{style:d={}}=e,{value:h=0}=e,{form_position:f="single"}=e,{show_label:l}=e,{loading_status:i}=e,{mode:b}=e;const _=["label","elem_id","visible","style","value","form_position","show_label","loading_status","mode"];Object.keys(e).forEach(s=>{!~_.indexOf(s)&&s.slice(0,2)!=="$$"&&s!=="slot"&&console.warn(`<Number> was created with unknown prop '${s}'`)});function o(s){h=s,t(0,h)}function Y(s){F.call(this,n,s)}function Z(s){F.call(this,n,s)}return n.$$set=s=>{"label"in s&&t(1,r=s.label),"elem_id"in s&&t(2,u=s.elem_id),"visible"in s&&t(3,m=s.visible),"style"in s&&t(4,d=s.style),"value"in s&&t(0,h=s.value),"form_position"in s&&t(5,f=s.form_position),"show_label"in s&&t(6,l=s.show_label),"loading_status"in s&&t(7,i=s.loading_status),"mode"in s&&t(8,b=s.mode)},n.$capture_state=()=>({Number:W,Block:H,StatusTracker:G,label:r,elem_id:u,visible:m,style:d,value:h,form_position:f,show_label:l,loading_status:i,mode:b}),n.$inject_state=s=>{"label"in s&&t(1,r=s.label),"elem_id"in s&&t(2,u=s.elem_id),"visible"in s&&t(3,m=s.visible),"style"in s&&t(4,d=s.style),"value"in s&&t(0,h=s.value),"form_position"in s&&t(5,f=s.form_position),"show_label"in s&&t(6,l=s.show_label),"loading_status"in s&&t(7,i=s.loading_status),"mode"in s&&t(8,b=s.mode)},e&&"$$inject"in e&&n.$inject_state(e.$$inject),[h,r,u,m,d,f,l,i,b,o,Y,Z]}class ue extends K{constructor(e){super(e),L(this,e,ae,j,M,{label:1,elem_id:2,visible:3,style:4,value:0,form_position:5,show_label:6,loading_status:7,mode:8}),w("SvelteRegisterComponent",{component:this,tagName:"Number_1",options:e,id:j.name});const{ctx:t}=this.$$,a=e.props||{};t[6]===void 0&&!("show_label"in a)&&console.warn("<Number> was created without expected prop 'show_label'"),t[7]===void 0&&!("loading_status"in a)&&console.warn("<Number> was created without expected prop 'loading_status'"),t[8]===void 0&&!("mode"in a)&&console.warn("<Number> was created without expected prop 'mode'")}get label(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set label(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get elem_id(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_id(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get visible(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set visible(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get style(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set style(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get value(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set value(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get form_position(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set form_position(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get show_label(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set show_label(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get loading_status(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set loading_status(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get mode(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set mode(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}var de=ue;const we=["static","dynamic"];export{de as Component,we as modes};
