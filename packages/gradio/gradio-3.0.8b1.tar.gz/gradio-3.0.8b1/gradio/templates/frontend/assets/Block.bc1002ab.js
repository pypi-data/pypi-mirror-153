import{S as L,i as U,s as O,d as P,W as C,v as W,Y as N,Z,h as z,b as f,t as a,c as A,e as R,_ as F,$ as G,a0 as H,D as q,E as D,g as K,q as I}from"./index.558a6aca.js";import{c as B}from"./styles.d87a390f.js";const J="mnt/c/Users/islam/dev/gradio-repos/gradio/ui/packages/atoms/src/Block.svelte";function p(n){let e,t,c;const i=n[15].default,d=Z(i,n,n[14],null),m={c:function(){e=z(n[11]),d&&d.c(),f(e,"data-testid",n[7]),f(e,"id",n[1]),f(e,"class",t="w-full overflow-hidden "+n[10][n[3]]+" "+n[10][n[4]]+" "+n[9]+B(n[0],"container")),a(e,"hidden",n[2]===!1),a(e,"gr-panel",n[5]),a(e,"form",n[6]),a(e,"gr-box-unrounded",n[6]),a(e,"gr-box",!n[6]),a(e,"!p-0",n[8]),a(e,"!m-0",n[8]),a(e,"!border-0",n[8]),a(e,"!shadow-none",n[8]),a(e,"overflow-visible",n[8]),A(e,J,42,0,1205)},m:function(s,l){R(s,e,l),d&&d.m(e,null),c=!0},p:function(s,l){d&&d.p&&(!c||l&16384)&&F(d,i,s,s[14],c?H(i,s[14],l,null):G(s[14]),null),(!c||l&128)&&f(e,"data-testid",s[7]),(!c||l&2)&&f(e,"id",s[1]),(!c||l&537&&t!==(t="w-full overflow-hidden "+s[10][s[3]]+" "+s[10][s[4]]+" "+s[9]+B(s[0],"container")))&&f(e,"class",t),l&541&&a(e,"hidden",s[2]===!1),l&569&&a(e,"gr-panel",s[5]),l&601&&a(e,"form",s[6]),l&601&&a(e,"gr-box-unrounded",s[6]),l&601&&a(e,"gr-box",!s[6]),l&793&&a(e,"!p-0",s[8]),l&793&&a(e,"!m-0",s[8]),l&793&&a(e,"!border-0",s[8]),l&793&&a(e,"!shadow-none",s[8]),l&793&&a(e,"overflow-visible",s[8])},i:function(s){c||(q(d,s),c=!0)},o:function(s){D(d,s),c=!1},d:function(s){s&&K(e),d&&d.d(s)}};return P("SvelteRegisterBlock",{block:m,id:p.name,type:"child_dynamic_element",source:'(43:0) <svelte:element  this={tag}  data-testid={test_id}  id={elem_id}  class:hidden={visible === false}  class={\\"w-full overflow-hidden \\" +   styles[variant] +   \\" \\" +   styles[color] +   \\" \\" +   form_class +   create_classes(style, \\"container\\")}  class:gr-panel={padding}  class:form={form_position}  class:gr-box-unrounded={form_position}  class:gr-box={!form_position}  class:!p-0={disable}  class:!m-0={disable}  class:!border-0={disable}  class:!shadow-none={disable}  class:overflow-visible={disable} >',ctx:n}),m}function E(n){let e=n[11],t,c;C(n[11]);let i=n[11]&&p(n);const d={c:function(){i&&i.c(),t=I()},l:function(r){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(r,s){i&&i.m(r,s),R(r,t,s),c=!0},p:function(r,[s]){r[11]?e?O(e,r[11])?(i.d(1),C(r[11]),i=p(r),i.c(),i.m(t.parentNode,t)):i.p(r,s):(i=p(r),i.c(),i.m(t.parentNode,t)):e&&(i.d(1),i=null),e=r[11]},i:function(r){c||(q(i),c=!0)},o:function(r){D(i),c=!1},d:function(r){r&&K(t),i&&i.d(r)}};return P("SvelteRegisterBlock",{block:d,id:E.name,type:"component",source:"",ctx:n}),d}function M(n,e,t){let c,i,{$$slots:d={},$$scope:m}=e;W("Block",d,["default"]);let{style:r={}}=e,{elem_id:s=""}=e,{visible:l=!0}=e,{variant:h="solid"}=e,{color:w="grey"}=e,{padding:g=!0}=e,{form_position:u=void 0}=e,{type:_="normal"}=e,{test_id:b=void 0}=e,{disable:v=!1}=e;const j={dashed:"border-dashed border border-gray-300",solid:"border-solid border",grey:"border-gray-200",green:"border-green-400",none:"!border-0"},S={column:{first:"rounded-t-lg",last:"rounded-b-lg",mid:"",single:"rounded-lg"},row:{first:"rounded-t-lg md:rounded-t-none md:rounded-l-lg ",last:"rounded-b-lg md:rounded-b-none md:rounded-r-lg",mid:"",single:"rounded-lg"}};let k=_==="fieldset"?"fieldset":"div";const y=N("BLOCK_KEY"),Y=["style","elem_id","visible","variant","color","padding","form_position","type","test_id","disable"];return Object.keys(e).forEach(o=>{!~Y.indexOf(o)&&o.slice(0,2)!=="$$"&&o!=="slot"&&console.warn(`<Block> was created with unknown prop '${o}'`)}),n.$$set=o=>{"style"in o&&t(0,r=o.style),"elem_id"in o&&t(1,s=o.elem_id),"visible"in o&&t(2,l=o.visible),"variant"in o&&t(3,h=o.variant),"color"in o&&t(4,w=o.color),"padding"in o&&t(5,g=o.padding),"form_position"in o&&t(6,u=o.form_position),"type"in o&&t(12,_=o.type),"test_id"in o&&t(7,b=o.test_id),"disable"in o&&t(8,v=o.disable),"$$scope"in o&&t(14,m=o.$$scope)},n.$capture_state=()=>({create_classes:B,getContext:N,style:r,elem_id:s,visible:l,variant:h,color:w,padding:g,form_position:u,type:_,test_id:b,disable:v,styles:j,form_styles:S,tag:k,parent:y,_parent:c,form_class:i}),n.$inject_state=o=>{"style"in o&&t(0,r=o.style),"elem_id"in o&&t(1,s=o.elem_id),"visible"in o&&t(2,l=o.visible),"variant"in o&&t(3,h=o.variant),"color"in o&&t(4,w=o.color),"padding"in o&&t(5,g=o.padding),"form_position"in o&&t(6,u=o.form_position),"type"in o&&t(12,_=o.type),"test_id"in o&&t(7,b=o.test_id),"disable"in o&&t(8,v=o.disable),"tag"in o&&t(11,k=o.tag),"_parent"in o&&t(13,c=o._parent),"form_class"in o&&t(9,i=o.form_class)},e&&"$$inject"in e&&n.$inject_state(e.$$inject),n.$$.update=()=>{n.$$.dirty&8256&&t(9,i=u?S?.[c||"column"][u]:"")},t(13,c=y==="column"||y=="row"?y:"column"),[r,s,l,h,w,g,u,b,v,i,j,k,_,c,m,d]}class V extends L{constructor(e){super(e),U(this,e,M,E,O,{style:0,elem_id:1,visible:2,variant:3,color:4,padding:5,form_position:6,type:12,test_id:7,disable:8}),P("SvelteRegisterComponent",{component:this,tagName:"Block",options:e,id:E.name})}get style(){throw new Error("<Block>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set style(e){throw new Error("<Block>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get elem_id(){throw new Error("<Block>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_id(e){throw new Error("<Block>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get visible(){throw new Error("<Block>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set visible(e){throw new Error("<Block>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get variant(){throw new Error("<Block>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set variant(e){throw new Error("<Block>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get color(){throw new Error("<Block>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set color(e){throw new Error("<Block>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get padding(){throw new Error("<Block>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set padding(e){throw new Error("<Block>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get form_position(){throw new Error("<Block>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set form_position(e){throw new Error("<Block>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get type(){throw new Error("<Block>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set type(e){throw new Error("<Block>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get test_id(){throw new Error("<Block>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set test_id(e){throw new Error("<Block>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get disable(){throw new Error("<Block>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set disable(e){throw new Error("<Block>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{V as B};
