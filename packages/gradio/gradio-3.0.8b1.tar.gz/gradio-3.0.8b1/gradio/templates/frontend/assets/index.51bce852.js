import{S as R,i as O,s as D,d,v as N,y,Y as E,P as Y,Q as Z,af as k,ab as I,Z as q,h as P,b as h,c as j,t as S,e as A,f as z,_ as F,$ as G,a0 as H,D as f,E as b,g as K,q as J,G as L,H as V,B as W,C as X,F as x,K as $}from"./index.558a6aca.js";import{a as B}from"./Tabs.f5a8efee.js";const C="mnt/c/Users/islam/dev/gradio-repos/gradio/ui/packages/tabs/src/TabItem.svelte";function w(i){let e,s,t;const l=i[7].default,o=q(l,i,i[6],null),n={c:function(){e=P("div"),s=P("div"),o&&o.c(),h(s,"class","flex flex-col gr-gap gr-form-gap relative col overflow-auto flex-1"),j(s,C,21,2,662),h(e,"id",i[0]),h(e,"class","tabitem p-2 border-2 border-t-0 border-gray-200 relative flex"),S(e,"hidden",i[1]===!1),j(e,C,16,1,530)},m:function(r,m){A(r,e,m),z(e,s),o&&o.m(s,null),t=!0},p:function(r,m){o&&o.p&&(!t||m&64)&&F(o,l,r,r[6],t?H(l,r[6],m,null):G(r[6]),null),(!t||m&1)&&h(e,"id",r[0]),m&2&&S(e,"hidden",r[1]===!1)},i:function(r){t||(f(o,r),t=!0)},o:function(r){b(o,r),t=!1},d:function(r){r&&K(e),o&&o.d(r)}};return d("SvelteRegisterBlock",{block:n,id:w.name,type:"if",source:"(16:0) {#if $selected_tab === id}",ctx:i}),n}function p(i){let e,s,t=i[2]===i[3]&&w(i);const l={c:function(){t&&t.c(),e=J()},l:function(n){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(n,a){t&&t.m(n,a),A(n,e,a),s=!0},p:function(n,[a]){n[2]===n[3]?t?(t.p(n,a),a&4&&f(t,1)):(t=w(n),t.c(),f(t,1),t.m(e.parentNode,e)):t&&(L(),b(t,1,1,()=>{t=null}),V())},i:function(n){s||(f(t),s=!0)},o:function(n){b(t),s=!1},d:function(n){t&&t.d(n),n&&K(e)}};return d("SvelteRegisterBlock",{block:l,id:p.name,type:"component",source:"",ctx:i}),l}function ee(i,e,s){let t,{$$slots:l={},$$scope:o}=e;N("TabItem",l,["default"]);let{elem_id:n=""}=e,{visible:a=!0}=e,{name:r}=e;const m=y(),c={},{register_tab:g,unregister_tab:T,selected_tab:_}=E(B);Y(_,"selected_tab"),Z(i,_,u=>s(2,t=u)),g({name:r,id:c}),k(()=>()=>T({name:r,id:c}));const U=["elem_id","visible","name"];return Object.keys(e).forEach(u=>{!~U.indexOf(u)&&u.slice(0,2)!=="$$"&&u!=="slot"&&console.warn(`<TabItem> was created with unknown prop '${u}'`)}),i.$$set=u=>{"elem_id"in u&&s(0,n=u.elem_id),"visible"in u&&s(1,a=u.visible),"name"in u&&s(5,r=u.name),"$$scope"in u&&s(6,o=u.$$scope)},i.$capture_state=()=>({getContext:E,onMount:k,createEventDispatcher:y,tick:I,TABS:B,elem_id:n,visible:a,name:r,dispatch:m,id:c,register_tab:g,unregister_tab:T,selected_tab:_,$selected_tab:t}),i.$inject_state=u=>{"elem_id"in u&&s(0,n=u.elem_id),"visible"in u&&s(1,a=u.visible),"name"in u&&s(5,r=u.name)},e&&"$$inject"in e&&i.$inject_state(e.$$inject),i.$$.update=()=>{i.$$.dirty&4&&t===c&&I().then(()=>m("select"))},[n,a,t,c,_,r,o,l]}class M extends R{constructor(e){super(e),O(this,e,ee,p,D,{elem_id:0,visible:1,name:5}),d("SvelteRegisterComponent",{component:this,tagName:"TabItem",options:e,id:p.name});const{ctx:s}=this.$$,t=e.props||{};s[5]===void 0&&!("name"in t)&&console.warn("<TabItem> was created without expected prop 'name'")}get elem_id(){throw new Error("<TabItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_id(e){throw new Error("<TabItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get visible(){throw new Error("<TabItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set visible(e){throw new Error("<TabItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get name(){throw new Error("<TabItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set name(e){throw new Error("<TabItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}function Q(i){let e;const s=i[3].default,t=q(s,i,i[5],null),l={c:function(){t&&t.c()},m:function(n,a){t&&t.m(n,a),e=!0},p:function(n,a){t&&t.p&&(!e||a&32)&&F(t,s,n,n[5],e?H(s,n[5],a,null):G(n[5]),null)},i:function(n){e||(f(t,n),e=!0)},o:function(n){b(t,n),e=!1},d:function(n){t&&t.d(n)}};return d("SvelteRegisterBlock",{block:l,id:Q.name,type:"slot",source:"(7:0) <TabItem {elem_id} {visible} name={label} on:select>",ctx:i}),l}function v(i){let e,s;e=new M({props:{elem_id:i[0],visible:i[1],name:i[2],$$slots:{default:[Q]},$$scope:{ctx:i}},$$inline:!0}),e.$on("select",i[4]);const t={c:function(){W(e.$$.fragment)},l:function(o){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(o,n){X(e,o,n),s=!0},p:function(o,[n]){const a={};n&1&&(a.elem_id=o[0]),n&2&&(a.visible=o[1]),n&4&&(a.name=o[2]),n&32&&(a.$$scope={dirty:n,ctx:o}),e.$set(a)},i:function(o){s||(f(e.$$.fragment,o),s=!0)},o:function(o){b(e.$$.fragment,o),s=!1},d:function(o){x(e,o)}};return d("SvelteRegisterBlock",{block:t,id:v.name,type:"component",source:"",ctx:i}),t}function te(i,e,s){let{$$slots:t={},$$scope:l}=e;N("Tabs",t,["default"]);let{elem_id:o=""}=e,{visible:n=!0}=e,{label:a}=e;const r=["elem_id","visible","label"];Object.keys(e).forEach(c=>{!~r.indexOf(c)&&c.slice(0,2)!=="$$"&&c!=="slot"&&console.warn(`<Tabs> was created with unknown prop '${c}'`)});function m(c){$.call(this,i,c)}return i.$$set=c=>{"elem_id"in c&&s(0,o=c.elem_id),"visible"in c&&s(1,n=c.visible),"label"in c&&s(2,a=c.label),"$$scope"in c&&s(5,l=c.$$scope)},i.$capture_state=()=>({TabItem:M,elem_id:o,visible:n,label:a}),i.$inject_state=c=>{"elem_id"in c&&s(0,o=c.elem_id),"visible"in c&&s(1,n=c.visible),"label"in c&&s(2,a=c.label)},e&&"$$inject"in e&&i.$inject_state(e.$$inject),[o,n,a,t,m,l]}class ne extends R{constructor(e){super(e),O(this,e,te,v,D,{elem_id:0,visible:1,label:2}),d("SvelteRegisterComponent",{component:this,tagName:"Tabs",options:e,id:v.name});const{ctx:s}=this.$$,t=e.props||{};s[2]===void 0&&!("label"in t)&&console.warn("<Tabs> was created without expected prop 'label'")}get elem_id(){throw new Error("<Tabs>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_id(e){throw new Error("<Tabs>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get visible(){throw new Error("<Tabs>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set visible(e){throw new Error("<Tabs>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get label(){throw new Error("<Tabs>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set label(e){throw new Error("<Tabs>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}var ie=ne;const ae=["static"];export{ie as Component,ae as modes};
