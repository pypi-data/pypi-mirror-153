import{S as y,i as k,s as B,d as v,v as L,h as f,B as E,w as I,k as x,b as h,c as g,t as u,e as P,f as m,C as j,m as S,D as C,E as z,g as D,F as O}from"./index.9c5bee43.js";import{g as _}from"./styles.db46e346.js";const p="mnt/c/Users/islam/dev/gradio-repos/gradio/ui/packages/atoms/src/BlockLabel.svelte";function w(n){let e,o,a,b,d,r,c;a=new n[1]({$$inline:!0});const i={c:function(){e=f("div"),o=f("span"),E(a.$$.fragment),b=I(),d=x(n[0]),h(o,"class","mr-2 h-[12px] w-[12px] opacity-80"),g(o,p,16,1,570),h(e,"class",r="absolute left-0 top-0 py-1 px-2 rounded-br-lg shadow-sm text-xs text-gray-500 flex items-center pointer-events-none bg-white z-20 border-b border-r border-gray-100 dark:bg-gray-900 "+n[3]),u(e,"h-0",!n[2]),u(e,"sr-only",!n[2]),g(e,p,10,0,262)},l:function(s){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(s,t){P(s,e,t),m(e,o),j(a,o,null),m(e,b),m(e,d),c=!0},p:function(s,[t]){(!c||t&1)&&S(d,s[0]),(!c||t&8&&r!==(r="absolute left-0 top-0 py-1 px-2 rounded-br-lg shadow-sm text-xs text-gray-500 flex items-center pointer-events-none bg-white z-20 border-b border-r border-gray-100 dark:bg-gray-900 "+s[3]))&&h(e,"class",r),t&12&&u(e,"h-0",!s[2]),t&12&&u(e,"sr-only",!s[2])},i:function(s){c||(C(a.$$.fragment,s),c=!0)},o:function(s){z(a.$$.fragment,s),c=!1},d:function(s){s&&D(e),O(a)}};return v("SvelteRegisterBlock",{block:i,id:w.name,type:"component",source:"",ctx:n}),i}function R(n,e,o){let a,{$$slots:b={},$$scope:d}=e;L("BlockLabel",b,[]);let{label:r=null}=e,{Icon:c}=e,{show_label:i=!0}=e,{disable:l=!1}=e;const s=["label","Icon","show_label","disable"];return Object.keys(e).forEach(t=>{!~s.indexOf(t)&&t.slice(0,2)!=="$$"&&t!=="slot"&&console.warn(`<BlockLabel> was created with unknown prop '${t}'`)}),n.$$set=t=>{"label"in t&&o(0,r=t.label),"Icon"in t&&o(1,c=t.Icon),"show_label"in t&&o(2,i=t.show_label),"disable"in t&&o(4,l=t.disable)},n.$capture_state=()=>({get_styles:_,label:r,Icon:c,show_label:i,disable:l,classes:a}),n.$inject_state=t=>{"label"in t&&o(0,r=t.label),"Icon"in t&&o(1,c=t.Icon),"show_label"in t&&o(2,i=t.show_label),"disable"in t&&o(4,l=t.disable),"classes"in t&&o(3,a=t.classes)},e&&"$$inject"in e&&n.$inject_state(e.$$inject),n.$$.update=()=>{n.$$.dirty&16&&o(3,{classes:a}=_({label_container:!l},["label_container"]),a)},[r,c,i,a,l]}class N extends y{constructor(e){super(e),k(this,e,R,w,B,{label:0,Icon:1,show_label:2,disable:4}),v("SvelteRegisterComponent",{component:this,tagName:"BlockLabel",options:e,id:w.name});const{ctx:o}=this.$$,a=e.props||{};o[1]===void 0&&!("Icon"in a)&&console.warn("<BlockLabel> was created without expected prop 'Icon'")}get label(){throw new Error("<BlockLabel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set label(e){throw new Error("<BlockLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get Icon(){throw new Error("<BlockLabel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set Icon(e){throw new Error("<BlockLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get show_label(){throw new Error("<BlockLabel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set show_label(e){throw new Error("<BlockLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get disable(){throw new Error("<BlockLabel>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set disable(e){throw new Error("<BlockLabel>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{N as B};
