import{S as L,i as M,s as V,d as _,v as z,y as R,ab as C,h as D,B as v,w as A,b as p,c as O,e as B,C as y,f as T,aa as U,l as q,a2 as x,ap as G,D as N,E,g as S,F as k,r as $,k as ee,m as te,R as H,T as se,I as ne,L as oe,K as F,U as re,V as ie,M as le}from"./index.91cf1cec.js";import{B as J}from"./Block.13c7ad76.js";import{g as I}from"./styles.db46e346.js";import{B as Q}from"./BlockTitle.e2f4871d.js";const K="mnt/c/Users/islam/dev/gradio-repos/gradio/ui/packages/form/src/Number.svelte";function W(s){let e;const t={c:function(){e=ee(s[2])},m:function(c,a){B(c,e,a)},p:function(c,a){a&4&&te(e,c[2])},d:function(c){c&&S(e)}};return _("SvelteRegisterBlock",{block:t,id:W.name,type:"slot",source:"(28:1) <BlockTitle {show_label}>",ctx:s}),t}function P(s){let e,t,l,c,a,u,m,h;t=new Q({props:{show_label:s[3],$$slots:{default:[W]},$$scope:{ctx:s}},$$inline:!0});const d={c:function(){e=D("label"),v(t.$$.fragment),l=A(),c=D("input"),p(c,"type","number"),p(c,"class",a="gr-box gr-input w-full gr-text-input "+s[4]),c.disabled=s[1],O(c,K,28,1,790),p(e,"class","block"),O(e,K,26,0,720)},l:function(i){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(i,o){B(i,e,o),y(t,e,null),T(e,l),T(e,c),U(c,s[0]),u=!0,m||(h=[q(c,"input",s[7]),q(c,"keypress",s[5],!1,!1,!1)],m=!0)},p:function(i,[o]){const b={};o&8&&(b.show_label=i[3]),o&1028&&(b.$$scope={dirty:o,ctx:i}),t.$set(b),(!u||o&16&&a!==(a="gr-box gr-input w-full gr-text-input "+i[4]))&&p(c,"class",a),(!u||o&2)&&x(c,"disabled",i[1]),o&1&&G(c.value)!==i[0]&&U(c,i[0])},i:function(i){u||(N(t.$$.fragment,i),u=!0)},o:function(i){E(t.$$.fragment,i),u=!1},d:function(i){i&&S(e),k(t),m=!1,$(h)}};return _("SvelteRegisterBlock",{block:d,id:P.name,type:"component",source:"",ctx:s}),d}function ae(s,e,t){let l,{$$slots:c={},$$scope:a}=e;z("Number",c,[]);let{value:u=0}=e,{style:m={}}=e,{disabled:h=!1}=e,{label:d}=e,{show_label:f}=e;const i=R();function o(r){!isNaN(r)&&r!==null&&i("change",r)}async function b(r){await C(),r.key==="Enter"&&(r.preventDefault(),i("submit"))}const g=["value","style","disabled","label","show_label"];Object.keys(e).forEach(r=>{!~g.indexOf(r)&&r.slice(0,2)!=="$$"&&r!=="slot"&&console.warn(`<Number> was created with unknown prop '${r}'`)});function w(){u=G(this.value),t(0,u)}return s.$$set=r=>{"value"in r&&t(0,u=r.value),"style"in r&&t(6,m=r.style),"disabled"in r&&t(1,h=r.disabled),"label"in r&&t(2,d=r.label),"show_label"in r&&t(3,f=r.show_label)},s.$capture_state=()=>({createEventDispatcher:R,tick:C,get_styles:I,BlockTitle:Q,value:u,style:m,disabled:h,label:d,show_label:f,dispatch:i,handle_change:o,handle_keypress:b,classes:l}),s.$inject_state=r=>{"value"in r&&t(0,u=r.value),"style"in r&&t(6,m=r.style),"disabled"in r&&t(1,h=r.disabled),"label"in r&&t(2,d=r.label),"show_label"in r&&t(3,f=r.show_label),"classes"in r&&t(4,l=r.classes)},e&&"$$inject"in e&&s.$inject_state(e.$$inject),s.$$.update=()=>{s.$$.dirty&1&&o(u),s.$$.dirty&64&&t(4,{classes:l}=I(m,["rounded","border"]),l)},[u,h,d,f,l,b,m,w]}class X extends L{constructor(e){super(e),M(this,e,ae,P,V,{value:0,style:6,disabled:1,label:2,show_label:3}),_("SvelteRegisterComponent",{component:this,tagName:"Number",options:e,id:P.name});const{ctx:t}=this.$$,l=e.props||{};t[2]===void 0&&!("label"in l)&&console.warn("<Number> was created without expected prop 'label'"),t[3]===void 0&&!("show_label"in l)&&console.warn("<Number> was created without expected prop 'show_label'")}get value(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set value(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get style(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set style(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get disabled(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set disabled(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get label(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set label(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get show_label(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set show_label(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}function Y(s){let e,t,l,c,a;const u=[s[7]];let m={};for(let i=0;i<u.length;i+=1)m=se(m,u[i]);e=new H({props:m,$$inline:!0});function h(i){s[9](i)}let d={label:s[1],show_label:s[6],style:s[3],disabled:s[8]==="static"};s[0]!==void 0&&(d.value=s[0]),l=new X({props:d,$$inline:!0}),ne.push(()=>oe(l,"value",h)),l.$on("change",s[10]),l.$on("submit",s[11]);const f={c:function(){v(e.$$.fragment),t=A(),v(l.$$.fragment)},m:function(o,b){y(e,o,b),B(o,t,b),y(l,o,b),a=!0},p:function(o,b){const g=b&128?re(u,[ie(o[7])]):{};e.$set(g);const w={};b&2&&(w.label=o[1]),b&64&&(w.show_label=o[6]),b&8&&(w.style=o[3]),b&256&&(w.disabled=o[8]==="static"),!c&&b&1&&(c=!0,w.value=o[0],le(()=>c=!1)),l.$set(w)},i:function(o){a||(N(e.$$.fragment,o),N(l.$$.fragment,o),a=!0)},o:function(o){E(e.$$.fragment,o),E(l.$$.fragment,o),a=!1},d:function(o){k(e,o),o&&S(t),k(l,o)}};return _("SvelteRegisterBlock",{block:f,id:Y.name,type:"slot",source:'(15:0) <Block  {form_position}  {elem_id}  disable={typeof style.container === \\"boolean\\" && !style.container}  {visible} >',ctx:s}),f}function j(s){let e,t;e=new J({props:{form_position:s[5],elem_id:s[2],disable:typeof s[3].container=="boolean"&&!s[3].container,visible:s[4],$$slots:{default:[Y]},$$scope:{ctx:s}},$$inline:!0});const l={c:function(){v(e.$$.fragment)},l:function(a){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(a,u){y(e,a,u),t=!0},p:function(a,[u]){const m={};u&32&&(m.form_position=a[5]),u&4&&(m.elem_id=a[2]),u&8&&(m.disable=typeof a[3].container=="boolean"&&!a[3].container),u&16&&(m.visible=a[4]),u&4555&&(m.$$scope={dirty:u,ctx:a}),e.$set(m)},i:function(a){t||(N(e.$$.fragment,a),t=!0)},o:function(a){E(e.$$.fragment,a),t=!1},d:function(a){k(e,a)}};return _("SvelteRegisterBlock",{block:l,id:j.name,type:"component",source:"",ctx:s}),l}function ce(s,e,t){let{$$slots:l={},$$scope:c}=e;z("Number",l,[]);let{label:a="Number"}=e,{elem_id:u=""}=e,{style:m={}}=e,{visible:h=!0}=e,{value:d=0}=e,{form_position:f="single"}=e,{show_label:i}=e,{loading_status:o}=e,{mode:b}=e;const g=["label","elem_id","style","visible","value","form_position","show_label","loading_status","mode"];Object.keys(e).forEach(n=>{!~g.indexOf(n)&&n.slice(0,2)!=="$$"&&n!=="slot"&&console.warn(`<Number> was created with unknown prop '${n}'`)});function w(n){d=n,t(0,d)}function r(n){F.call(this,s,n)}function Z(n){F.call(this,s,n)}return s.$$set=n=>{"label"in n&&t(1,a=n.label),"elem_id"in n&&t(2,u=n.elem_id),"style"in n&&t(3,m=n.style),"visible"in n&&t(4,h=n.visible),"value"in n&&t(0,d=n.value),"form_position"in n&&t(5,f=n.form_position),"show_label"in n&&t(6,i=n.show_label),"loading_status"in n&&t(7,o=n.loading_status),"mode"in n&&t(8,b=n.mode)},s.$capture_state=()=>({Number:X,Block:J,StatusTracker:H,label:a,elem_id:u,style:m,visible:h,value:d,form_position:f,show_label:i,loading_status:o,mode:b}),s.$inject_state=n=>{"label"in n&&t(1,a=n.label),"elem_id"in n&&t(2,u=n.elem_id),"style"in n&&t(3,m=n.style),"visible"in n&&t(4,h=n.visible),"value"in n&&t(0,d=n.value),"form_position"in n&&t(5,f=n.form_position),"show_label"in n&&t(6,i=n.show_label),"loading_status"in n&&t(7,o=n.loading_status),"mode"in n&&t(8,b=n.mode)},e&&"$$inject"in e&&s.$inject_state(e.$$inject),[d,a,u,m,h,f,i,o,b,w,r,Z]}class ue extends L{constructor(e){super(e),M(this,e,ce,j,V,{label:1,elem_id:2,style:3,visible:4,value:0,form_position:5,show_label:6,loading_status:7,mode:8}),_("SvelteRegisterComponent",{component:this,tagName:"Number_1",options:e,id:j.name});const{ctx:t}=this.$$,l=e.props||{};t[6]===void 0&&!("show_label"in l)&&console.warn("<Number> was created without expected prop 'show_label'"),t[7]===void 0&&!("loading_status"in l)&&console.warn("<Number> was created without expected prop 'loading_status'"),t[8]===void 0&&!("mode"in l)&&console.warn("<Number> was created without expected prop 'mode'")}get label(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set label(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get elem_id(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_id(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get style(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set style(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get visible(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set visible(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get value(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set value(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get form_position(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set form_position(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get show_label(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set show_label(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get loading_status(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set loading_status(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get mode(){throw new Error("<Number>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set mode(e){throw new Error("<Number>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}var he=ue;const we=["static","dynamic"];export{he as Component,we as modes};
