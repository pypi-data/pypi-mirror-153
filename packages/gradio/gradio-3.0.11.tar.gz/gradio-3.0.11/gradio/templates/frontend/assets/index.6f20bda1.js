import{S as _,i as g,s as p,d as w,Z as b,v as C,h as y,b as f,t as c,c as E,e as P,_ as j,$ as S,a0 as k,D,E as O,g as R}from"./index.44e4e590.js";import{c as d}from"./styles.db46e346.js";const q="src/components/Column/Column.svelte";function h(s){let e,o,r;const m=s[6].default,l=b(m,s,s[5],null),u={c:function(){e=y("div"),l&&l.c(),f(e,"id",s[0]),f(e,"class",o="flex flex-col gr-gap gr-form-gap relative col w-full "+d(s[3])),c(e,"hidden",s[1]===!1),c(e,"bg-gray-50",s[2]==="panel"),c(e,"p-2",s[2]==="panel"),c(e,"rounded-lg",s[2]==="panel"),E(e,q,8,0,210)},l:function(n){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(n,i){P(n,e,i),l&&l.m(e,null),r=!0},p:function(n,[i]){l&&l.p&&(!r||i&32)&&j(l,m,n,n[5],r?k(m,n[5],i,null):S(n[5]),null),(!r||i&1)&&f(e,"id",n[0]),(!r||i&8&&o!==(o="flex flex-col gr-gap gr-form-gap relative col w-full "+d(n[3])))&&f(e,"class",o),i&10&&c(e,"hidden",n[1]===!1),i&12&&c(e,"bg-gray-50",n[2]==="panel"),i&12&&c(e,"p-2",n[2]==="panel"),i&12&&c(e,"rounded-lg",n[2]==="panel")},i:function(n){r||(D(l,n),r=!0)},o:function(n){O(l,n),r=!1},d:function(n){n&&R(e),l&&l.d(n)}};return w("SvelteRegisterBlock",{block:u,id:h.name,type:"component",source:"",ctx:s}),u}function B(s,e,o){let{$$slots:r={},$$scope:m}=e;C("Column",r,["default"]);let{elem_id:l=""}=e,{visible:u=!0}=e,{variant:a="default"}=e,{parent:n=null}=e,{style:i={}}=e;const v=["elem_id","visible","variant","parent","style"];return Object.keys(e).forEach(t=>{!~v.indexOf(t)&&t.slice(0,2)!=="$$"&&t!=="slot"&&console.warn(`<Column> was created with unknown prop '${t}'`)}),s.$$set=t=>{"elem_id"in t&&o(0,l=t.elem_id),"visible"in t&&o(1,u=t.visible),"variant"in t&&o(2,a=t.variant),"parent"in t&&o(4,n=t.parent),"style"in t&&o(3,i=t.style),"$$scope"in t&&o(5,m=t.$$scope)},s.$capture_state=()=>({create_classes:d,elem_id:l,visible:u,variant:a,parent:n,style:i}),s.$inject_state=t=>{"elem_id"in t&&o(0,l=t.elem_id),"visible"in t&&o(1,u=t.visible),"variant"in t&&o(2,a=t.variant),"parent"in t&&o(4,n=t.parent),"style"in t&&o(3,i=t.style)},e&&"$$inject"in e&&s.$inject_state(e.$$inject),[l,u,a,i,n,m,r]}class N extends _{constructor(e){super(e),g(this,e,B,h,p,{elem_id:0,visible:1,variant:2,parent:4,style:3}),w("SvelteRegisterComponent",{component:this,tagName:"Column",options:e,id:h.name})}get elem_id(){throw new Error("<Column>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_id(e){throw new Error("<Column>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get visible(){throw new Error("<Column>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set visible(e){throw new Error("<Column>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get variant(){throw new Error("<Column>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set variant(e){throw new Error("<Column>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get parent(){throw new Error("<Column>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set parent(e){throw new Error("<Column>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get style(){throw new Error("<Column>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set style(e){throw new Error("<Column>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}var A=N;const F=["static"];export{A as Component,F as modes};
