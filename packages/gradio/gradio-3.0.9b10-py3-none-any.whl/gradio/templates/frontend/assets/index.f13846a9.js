import{S as h,i as p,s as v,d as u,v as w,Z as g,B as T,C as y,D as m,E as f,F as E,K as j,_ as S,$ as k,a0 as C}from"./index.3cb8de18.js";import{T as _}from"./Tabs.0484ccf9.js";function d(o){let e;const a=o[2].default,i=g(a,o,o[4],null),c={c:function(){i&&i.c()},m:function(t,r){i&&i.m(t,r),e=!0},p:function(t,r){i&&i.p&&(!e||r&16)&&S(i,a,t,t[4],e?C(a,t[4],r,null):k(t[4]),null)},i:function(t){e||(m(i,t),e=!0)},o:function(t){f(i,t),e=!1},d:function(t){i&&i.d(t)}};return u("SvelteRegisterBlock",{block:c,id:d.name,type:"slot",source:"(6:0) <Tabs {elem_id} {visible} on:change>",ctx:o}),c}function l(o){let e,a;e=new _({props:{elem_id:o[0],visible:o[1],$$slots:{default:[d]},$$scope:{ctx:o}},$$inline:!0}),e.$on("change",o[3]);const i={c:function(){T(e.$$.fragment)},l:function(n){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(n,t){y(e,n,t),a=!0},p:function(n,[t]){const r={};t&1&&(r.elem_id=n[0]),t&2&&(r.visible=n[1]),t&16&&(r.$$scope={dirty:t,ctx:n}),e.$set(r)},i:function(n){a||(m(e.$$.fragment,n),a=!0)},o:function(n){f(e.$$.fragment,n),a=!1},d:function(n){E(e,n)}};return u("SvelteRegisterBlock",{block:i,id:l.name,type:"component",source:"",ctx:o}),i}function P(o,e,a){let{$$slots:i={},$$scope:c}=e;w("Tabs",i,["default"]);let{elem_id:n=""}=e,{visible:t=!0}=e;const r=["elem_id","visible"];Object.keys(e).forEach(s=>{!~r.indexOf(s)&&s.slice(0,2)!=="$$"&&s!=="slot"&&console.warn(`<Tabs> was created with unknown prop '${s}'`)});function b(s){j.call(this,o,s)}return o.$$set=s=>{"elem_id"in s&&a(0,n=s.elem_id),"visible"in s&&a(1,t=s.visible),"$$scope"in s&&a(4,c=s.$$scope)},o.$capture_state=()=>({Tabs:_,elem_id:n,visible:t}),o.$inject_state=s=>{"elem_id"in s&&a(0,n=s.elem_id),"visible"in s&&a(1,t=s.visible)},e&&"$$inject"in e&&o.$inject_state(e.$$inject),[n,t,i,b,c]}class B extends h{constructor(e){super(e),p(this,e,P,l,v,{elem_id:0,visible:1}),u("SvelteRegisterComponent",{component:this,tagName:"Tabs_1",options:e,id:l.name})}get elem_id(){throw new Error("<Tabs>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set elem_id(e){throw new Error("<Tabs>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get visible(){throw new Error("<Tabs>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set visible(e){throw new Error("<Tabs>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}var O=B;const q=["static"];export{O as Component,q as modes};
