# coding: utf-8

"""
    InsightsServices-Dev-QA

    SR Insight Service API Documentation  # noqa: E501

    OpenAPI spec version: 3.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.configuration import Configuration


class SeedingResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'area': 'Measure',
        'boundary_id': 'str',
        'created_date_time': 'datetime',
        'crop_season': 'str',
        'description': 'str',
        'farmer_id': 'str',
        'files': 'list[FileInfo]',
        'id': 'str',
        'modified_date_time': 'datetime',
        'name': 'str',
        'operation_boundary_id': 'str',
        'operation_end_date_time': 'datetime',
        'operation_modified_date_time': 'datetime',
        'operation_start_date_time': 'datetime',
        'operation_type': 'str',
        'org_id': 'str',
        'planting_product_details': 'list[PlantingProductDetails]',
        'properties': 'object',
        'source': 'str',
        'source_op_id': 'str',
        'status': 'str',
        'tenant_type': 'str'
    }

    attribute_map = {
        'area': 'area',
        'boundary_id': 'boundaryId',
        'created_date_time': 'createdDateTime',
        'crop_season': 'cropSeason',
        'description': 'description',
        'farmer_id': 'farmerId',
        'files': 'files',
        'id': 'id',
        'modified_date_time': 'modifiedDateTime',
        'name': 'name',
        'operation_boundary_id': 'operationBoundaryId',
        'operation_end_date_time': 'operationEndDateTime',
        'operation_modified_date_time': 'operationModifiedDateTime',
        'operation_start_date_time': 'operationStartDateTime',
        'operation_type': 'operationType',
        'org_id': 'orgId',
        'planting_product_details': 'plantingProductDetails',
        'properties': 'properties',
        'source': 'source',
        'source_op_id': 'sourceOpId',
        'status': 'status',
        'tenant_type': 'tenantType'
    }

    def __init__(self, area=None, boundary_id=None, created_date_time=None, crop_season=None, description=None, farmer_id=None, files=None, id=None, modified_date_time=None, name=None, operation_boundary_id=None, operation_end_date_time=None, operation_modified_date_time=None, operation_start_date_time=None, operation_type=None, org_id=None, planting_product_details=None, properties=None, source=None, source_op_id=None, status=None, tenant_type=None, _configuration=None):  # noqa: E501
        """SeedingResponse - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._area = None
        self._boundary_id = None
        self._created_date_time = None
        self._crop_season = None
        self._description = None
        self._farmer_id = None
        self._files = None
        self._id = None
        self._modified_date_time = None
        self._name = None
        self._operation_boundary_id = None
        self._operation_end_date_time = None
        self._operation_modified_date_time = None
        self._operation_start_date_time = None
        self._operation_type = None
        self._org_id = None
        self._planting_product_details = None
        self._properties = None
        self._source = None
        self._source_op_id = None
        self._status = None
        self._tenant_type = None
        self.discriminator = None

        if area is not None:
            self.area = area
        if boundary_id is not None:
            self.boundary_id = boundary_id
        if created_date_time is not None:
            self.created_date_time = created_date_time
        if crop_season is not None:
            self.crop_season = crop_season
        if description is not None:
            self.description = description
        if farmer_id is not None:
            self.farmer_id = farmer_id
        if files is not None:
            self.files = files
        if id is not None:
            self.id = id
        if modified_date_time is not None:
            self.modified_date_time = modified_date_time
        if name is not None:
            self.name = name
        if operation_boundary_id is not None:
            self.operation_boundary_id = operation_boundary_id
        if operation_end_date_time is not None:
            self.operation_end_date_time = operation_end_date_time
        if operation_modified_date_time is not None:
            self.operation_modified_date_time = operation_modified_date_time
        if operation_start_date_time is not None:
            self.operation_start_date_time = operation_start_date_time
        if operation_type is not None:
            self.operation_type = operation_type
        if org_id is not None:
            self.org_id = org_id
        if planting_product_details is not None:
            self.planting_product_details = planting_product_details
        if properties is not None:
            self.properties = properties
        if source is not None:
            self.source = source
        if source_op_id is not None:
            self.source_op_id = source_op_id
        if status is not None:
            self.status = status
        if tenant_type is not None:
            self.tenant_type = tenant_type

    @property
    def area(self):
        """Gets the area of this SeedingResponse.  # noqa: E501


        :return: The area of this SeedingResponse.  # noqa: E501
        :rtype: Measure
        """
        return self._area

    @area.setter
    def area(self, area):
        """Sets the area of this SeedingResponse.


        :param area: The area of this SeedingResponse.  # noqa: E501
        :type: Measure
        """

        self._area = area

    @property
    def boundary_id(self):
        """Gets the boundary_id of this SeedingResponse.  # noqa: E501


        :return: The boundary_id of this SeedingResponse.  # noqa: E501
        :rtype: str
        """
        return self._boundary_id

    @boundary_id.setter
    def boundary_id(self, boundary_id):
        """Sets the boundary_id of this SeedingResponse.


        :param boundary_id: The boundary_id of this SeedingResponse.  # noqa: E501
        :type: str
        """

        self._boundary_id = boundary_id

    @property
    def created_date_time(self):
        """Gets the created_date_time of this SeedingResponse.  # noqa: E501


        :return: The created_date_time of this SeedingResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._created_date_time

    @created_date_time.setter
    def created_date_time(self, created_date_time):
        """Sets the created_date_time of this SeedingResponse.


        :param created_date_time: The created_date_time of this SeedingResponse.  # noqa: E501
        :type: datetime
        """

        self._created_date_time = created_date_time

    @property
    def crop_season(self):
        """Gets the crop_season of this SeedingResponse.  # noqa: E501


        :return: The crop_season of this SeedingResponse.  # noqa: E501
        :rtype: str
        """
        return self._crop_season

    @crop_season.setter
    def crop_season(self, crop_season):
        """Sets the crop_season of this SeedingResponse.


        :param crop_season: The crop_season of this SeedingResponse.  # noqa: E501
        :type: str
        """

        self._crop_season = crop_season

    @property
    def description(self):
        """Gets the description of this SeedingResponse.  # noqa: E501


        :return: The description of this SeedingResponse.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SeedingResponse.


        :param description: The description of this SeedingResponse.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def farmer_id(self):
        """Gets the farmer_id of this SeedingResponse.  # noqa: E501


        :return: The farmer_id of this SeedingResponse.  # noqa: E501
        :rtype: str
        """
        return self._farmer_id

    @farmer_id.setter
    def farmer_id(self, farmer_id):
        """Sets the farmer_id of this SeedingResponse.


        :param farmer_id: The farmer_id of this SeedingResponse.  # noqa: E501
        :type: str
        """

        self._farmer_id = farmer_id

    @property
    def files(self):
        """Gets the files of this SeedingResponse.  # noqa: E501


        :return: The files of this SeedingResponse.  # noqa: E501
        :rtype: list[FileInfo]
        """
        return self._files

    @files.setter
    def files(self, files):
        """Sets the files of this SeedingResponse.


        :param files: The files of this SeedingResponse.  # noqa: E501
        :type: list[FileInfo]
        """

        self._files = files

    @property
    def id(self):
        """Gets the id of this SeedingResponse.  # noqa: E501


        :return: The id of this SeedingResponse.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SeedingResponse.


        :param id: The id of this SeedingResponse.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def modified_date_time(self):
        """Gets the modified_date_time of this SeedingResponse.  # noqa: E501


        :return: The modified_date_time of this SeedingResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._modified_date_time

    @modified_date_time.setter
    def modified_date_time(self, modified_date_time):
        """Sets the modified_date_time of this SeedingResponse.


        :param modified_date_time: The modified_date_time of this SeedingResponse.  # noqa: E501
        :type: datetime
        """

        self._modified_date_time = modified_date_time

    @property
    def name(self):
        """Gets the name of this SeedingResponse.  # noqa: E501


        :return: The name of this SeedingResponse.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SeedingResponse.


        :param name: The name of this SeedingResponse.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def operation_boundary_id(self):
        """Gets the operation_boundary_id of this SeedingResponse.  # noqa: E501


        :return: The operation_boundary_id of this SeedingResponse.  # noqa: E501
        :rtype: str
        """
        return self._operation_boundary_id

    @operation_boundary_id.setter
    def operation_boundary_id(self, operation_boundary_id):
        """Sets the operation_boundary_id of this SeedingResponse.


        :param operation_boundary_id: The operation_boundary_id of this SeedingResponse.  # noqa: E501
        :type: str
        """

        self._operation_boundary_id = operation_boundary_id

    @property
    def operation_end_date_time(self):
        """Gets the operation_end_date_time of this SeedingResponse.  # noqa: E501


        :return: The operation_end_date_time of this SeedingResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._operation_end_date_time

    @operation_end_date_time.setter
    def operation_end_date_time(self, operation_end_date_time):
        """Sets the operation_end_date_time of this SeedingResponse.


        :param operation_end_date_time: The operation_end_date_time of this SeedingResponse.  # noqa: E501
        :type: datetime
        """

        self._operation_end_date_time = operation_end_date_time

    @property
    def operation_modified_date_time(self):
        """Gets the operation_modified_date_time of this SeedingResponse.  # noqa: E501


        :return: The operation_modified_date_time of this SeedingResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._operation_modified_date_time

    @operation_modified_date_time.setter
    def operation_modified_date_time(self, operation_modified_date_time):
        """Sets the operation_modified_date_time of this SeedingResponse.


        :param operation_modified_date_time: The operation_modified_date_time of this SeedingResponse.  # noqa: E501
        :type: datetime
        """

        self._operation_modified_date_time = operation_modified_date_time

    @property
    def operation_start_date_time(self):
        """Gets the operation_start_date_time of this SeedingResponse.  # noqa: E501


        :return: The operation_start_date_time of this SeedingResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._operation_start_date_time

    @operation_start_date_time.setter
    def operation_start_date_time(self, operation_start_date_time):
        """Sets the operation_start_date_time of this SeedingResponse.


        :param operation_start_date_time: The operation_start_date_time of this SeedingResponse.  # noqa: E501
        :type: datetime
        """

        self._operation_start_date_time = operation_start_date_time

    @property
    def operation_type(self):
        """Gets the operation_type of this SeedingResponse.  # noqa: E501


        :return: The operation_type of this SeedingResponse.  # noqa: E501
        :rtype: str
        """
        return self._operation_type

    @operation_type.setter
    def operation_type(self, operation_type):
        """Sets the operation_type of this SeedingResponse.


        :param operation_type: The operation_type of this SeedingResponse.  # noqa: E501
        :type: str
        """

        self._operation_type = operation_type

    @property
    def org_id(self):
        """Gets the org_id of this SeedingResponse.  # noqa: E501


        :return: The org_id of this SeedingResponse.  # noqa: E501
        :rtype: str
        """
        return self._org_id

    @org_id.setter
    def org_id(self, org_id):
        """Sets the org_id of this SeedingResponse.


        :param org_id: The org_id of this SeedingResponse.  # noqa: E501
        :type: str
        """

        self._org_id = org_id

    @property
    def planting_product_details(self):
        """Gets the planting_product_details of this SeedingResponse.  # noqa: E501


        :return: The planting_product_details of this SeedingResponse.  # noqa: E501
        :rtype: list[PlantingProductDetails]
        """
        return self._planting_product_details

    @planting_product_details.setter
    def planting_product_details(self, planting_product_details):
        """Sets the planting_product_details of this SeedingResponse.


        :param planting_product_details: The planting_product_details of this SeedingResponse.  # noqa: E501
        :type: list[PlantingProductDetails]
        """

        self._planting_product_details = planting_product_details

    @property
    def properties(self):
        """Gets the properties of this SeedingResponse.  # noqa: E501


        :return: The properties of this SeedingResponse.  # noqa: E501
        :rtype: object
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this SeedingResponse.


        :param properties: The properties of this SeedingResponse.  # noqa: E501
        :type: object
        """

        self._properties = properties

    @property
    def source(self):
        """Gets the source of this SeedingResponse.  # noqa: E501


        :return: The source of this SeedingResponse.  # noqa: E501
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this SeedingResponse.


        :param source: The source of this SeedingResponse.  # noqa: E501
        :type: str
        """

        self._source = source

    @property
    def source_op_id(self):
        """Gets the source_op_id of this SeedingResponse.  # noqa: E501


        :return: The source_op_id of this SeedingResponse.  # noqa: E501
        :rtype: str
        """
        return self._source_op_id

    @source_op_id.setter
    def source_op_id(self, source_op_id):
        """Sets the source_op_id of this SeedingResponse.


        :param source_op_id: The source_op_id of this SeedingResponse.  # noqa: E501
        :type: str
        """

        self._source_op_id = source_op_id

    @property
    def status(self):
        """Gets the status of this SeedingResponse.  # noqa: E501


        :return: The status of this SeedingResponse.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SeedingResponse.


        :param status: The status of this SeedingResponse.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def tenant_type(self):
        """Gets the tenant_type of this SeedingResponse.  # noqa: E501


        :return: The tenant_type of this SeedingResponse.  # noqa: E501
        :rtype: str
        """
        return self._tenant_type

    @tenant_type.setter
    def tenant_type(self, tenant_type):
        """Sets the tenant_type of this SeedingResponse.


        :param tenant_type: The tenant_type of this SeedingResponse.  # noqa: E501
        :type: str
        """
        allowed_values = ["SMARTFARM", "SMARTFARM_PLUS", "SMARTRISK"]  # noqa: E501
        if (self._configuration.client_side_validation and
                tenant_type not in allowed_values):
            raise ValueError(
                "Invalid value for `tenant_type` ({0}), must be one of {1}"  # noqa: E501
                .format(tenant_type, allowed_values)
            )

        self._tenant_type = tenant_type

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SeedingResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SeedingResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, SeedingResponse):
            return True

        return self.to_dict() != other.to_dict()
