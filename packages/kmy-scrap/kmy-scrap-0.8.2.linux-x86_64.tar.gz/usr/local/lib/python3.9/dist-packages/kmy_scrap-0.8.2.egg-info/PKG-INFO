Metadata-Version: 2.1
Name: kmy-scrap
Version: 0.8.2
Summary: apikey search enggine scraping based.
Home-page: https://github.com/ExsoKamabay/Api-scrap
Author: Exso Kamabay
Author-email: <lexyong66@gmail.com>
License: Apache License 2.0
Description: # kmy_scrap
        
        # *`apikey search enggine scraping based!`*
        
        
        ## **`like this site!`**
        
        - **_`Github`_** [link](https://github.com/search?q=)
        - **_`Google`_** [link](https://google.com/search?q=)
        - **_`HappyMod`_** [link](https://www.happymod.com/?q=)
        - **_`Rexdl`_** [link](https://www.rexdl.com)
        - **_`Ocean Of Game`_** [link](http://oceanofgames.com/)
        - **_`Source Forge`_** [link](https://www.sourceforge.net)
        
        **`Example`**
        
        ```python 
        #import package
        from kmy_scrap import Google,Github,Search_App_Mod
        
        google = Google(query='wolf')
        google_search = google.search_query(start=1,stop=20)
        google_image = google.google.search_image(start=1,related_results=True)
        google_video = google.search_video(max_search=10)
        
        search_app_mod = Search_App_Mod(query='free fire')
        search_rexdl = search_app_mod.rexdl(1)
        search_happymod = search_app_mod.happymod()
        
        github = Github(query='networking')
        search_github = github.search(page=2)# it's looking for 1 page 
        # https://github.com/search?q=networking&page=2
        searches_github = github.searches(page=2) # it searches pages starting from 1 to stop at the specified page
        # https://github.com/search?q=networking&page=1 and https://github.com/search?q=networking&page=2
        ```
        
        ## ```the result is still in string form, we need to import json to convert the result in json form```
        ```python
        #load results
        from json import loads
        ```
        ### ```display the result in json form```
        ```python
        # Google search result
        print(loads(google_search))
        print(loads(google_image))
        print(loads(google_video))
        ```
        ```results``` > [google_search](https://github.com/ExsoKamabay/Api-scrap/blob/master/response/google.search_query(start%3D1%2Cstop%3D10).json) > [google_image](https://github.com/ExsoKamabay/Api-scrap/blob/master/response/google.search_image(start%3D1%2Crelated_results%3DTrue).json)  >  [google_video](https://github.com/ExsoKamabay/Api-scrap/blob/master/response/google.search_video(max_search%3D10).json)
        
        ```python
        # Search app mod result
        print(loads(search_rexdl))
        print(loads(search_happymod))
        ```
        ```results``` > [rexdl](https://github.com/ExsoKamabay/Api-scrap/blob/master/response/search_app_mod.rexdl(1).json) > [happymod](https://github.com/ExsoKamabay/Api-scrap/blob/master/response/search_app_mod.happymod().json)
        
        ```python
        #Github search results
        print(loads(search_github))
        print(loads(searches_github))
        ```
        ```results``` > [search_github](https://github.com/ExsoKamabay/Api-scrap/blob/master/response/github.search(page%3D2).json) > [searches_github](https://github.com/ExsoKamabay/Api-scrap/blob/master/response/github.searches(page%3D2).json)
        <hr>
Keywords: python,free,apikey,apikey scraping based,search,search enggine
Platform: UNKNOWN
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Utilities
Description-Content-Type: text/markdown
