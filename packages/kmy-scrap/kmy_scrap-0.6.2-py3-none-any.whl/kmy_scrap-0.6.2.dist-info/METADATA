Metadata-Version: 2.1
Name: kmy-scrap
Version: 0.6.2
Summary: Free Apikey
Home-page: https://github.com/ExsoKamabay/Api-scrap
Author: Lex Yong
Author-email: lexyong66@gmail.com
License: UNKNOWN
Keywords: free api key,exso kamabay,api,key,free
Platform: windows
Platform: linux
Platform: macos
Description-Content-Type: text/markdown
Requires-Dist: bs4 (==0.0.1)
Requires-Dist: requests (==2.27.1)
Requires-Dist: youtube-search (==2.1.0)

# kmy_scrap

# *`apikey search enggine scraping based!`*


## **`like this site!`**

- **_`Github`_** [link](https://github.com/search?q=)
- **_`Google`_** [link](https://google.com/search?q=)
- **_`HappyMod`_** [link](https://www.happymod.com/?q=)
- **_`Rexdl`_** [link](https://www.rexdl.com)
- **_`Ocean Of Games`_** [link](http://oceanofgames.com/)
- **_`Source Forge`_** [link](https://sourceforge.net/)


```python
# download from pip
pip install kmy-scrap
```
[https://pypi.org/project/kmy-scrap/](https://pypi.org/project/kmy-scrap/)

**`Example`**

```python 

from json import loads
from kmy_scrap import Search_App_Mod,Google,Github,SourceForge,list_category_OceanOfGame


search = Search_App_Mod('free fire').happymod()


print(search) # result type string

print(loads(search))# convert to json





# kmy_scrap
'''
random_user_agent -> (function)

list_category_OceanOfGame -> (function)

Github -> (class)
    |-> __init__(self,query:str) -> str:
    |-> total_results -> (@property)
    |-> search -> (method)
    |-> searches -> (method)

Google -> (class)
    |-> __init__(self,query:str) -> str:
    |-> get_content -> (method)
    |-> search_image -> (method)
    |-> search_query -> (method)
    |-> search_video -> (method)

Search_App_Mod -> (class)
    |-> __init__(self,query:str) -> str:
    |-> happymod -> (method)
    |-> rexdl -> (method)
    |-> ocean_of_game -> (method)

SourceForge -> (class)
    |-> __init__(self,query:str) -> str:
    |-> search -> (method)
'''
from kmy_scrap import *
# Parameters
Github(query:str).search(page:int)
Github(query:str).searches(page:int)

Google(query:str).get_content(url:str)
Google(query:str).search_video(max_search:int)
Google(query:str).search_image
    (
      start:int,
      related_results:bool,
      # filter result
      orientation:str, # value : portrait,landscape,square
      anim:str, # value : yes / no
      face:str, # value : yes / no
      size:str, # value : small,medium,large,wallpaper
      color:str, # value : red,orange,yellow,green,teal,purple,pink,brown,gray,white,black
      hl:str, # language
      cr:str, # country
                      )
Google(query:str).search_query
    (
      start:int, # start search
      stop:int, # end search
      lang:str, # language
      country:str, # country
                          )

Search_App_Mod(query:str).happymod(search_mode='fast') # mode option 'fast' or 'slow'
Search_App_Mod(query:str).rexdl(page:int)
Search_App_Mod(query:str).ocean_of_game
    (
      type:str, # value : category / search
      page:int,
             )
```

# ```Update```

- ```17-01-2022``` 

add the ```ocean_of_game``` method to the ```Search_App_Mod``` class, a new ```SourceForge``` class with the ```search``` method to search.

- ```29-04-2022``` 

added search mode to happymod

