"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class DatasetStats(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Histogram(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class Bucket(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor
            VALUE_FIELD_NUMBER: builtins.int
            COUNT_FIELD_NUMBER: builtins.int
            value: typing.Text
            count: builtins.int
            def __init__(self,
                *,
                value: typing.Text = ...,
                count: builtins.int = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["count",b"count","value",b"value"]) -> None: ...

        NAME_FIELD_NUMBER: builtins.int
        BUCKETS_FIELD_NUMBER: builtins.int
        name: typing.Text
        @property
        def buckets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DatasetStats.Histogram.Bucket]: ...
        def __init__(self,
            *,
            name: typing.Text = ...,
            buckets: typing.Optional[typing.Iterable[global___DatasetStats.Histogram.Bucket]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["buckets",b"buckets","name",b"name"]) -> None: ...

    ROW_COUNT_FIELD_NUMBER: builtins.int
    HISTOGRAMS_FIELD_NUMBER: builtins.int
    SIZE_IN_BYTES_FIELD_NUMBER: builtins.int
    row_count: builtins.int
    @property
    def histograms(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DatasetStats.Histogram]: ...
    size_in_bytes: builtins.int
    def __init__(self,
        *,
        row_count: builtins.int = ...,
        histograms: typing.Optional[typing.Iterable[global___DatasetStats.Histogram]] = ...,
        size_in_bytes: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["histograms",b"histograms","row_count",b"row_count","size_in_bytes",b"size_in_bytes"]) -> None: ...
global___DatasetStats = DatasetStats
